# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/33deg(77.93).sat', 
    scaleFromFile=OFF)
mdb.models['Model-1'].PartFromGeometryFile(combine=False, dimensionality=
    THREE_D, geometryFile=mdb.acis, name='P33deg(7793)', type=DEFORMABLE_BODY)
mdb.models['Model-1'].Material(name='Material-1')
mdb.models['Model-1'].materials['Material-1'].Elastic(table=((30000.0, 0.2), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['Model-1'].parts['P33deg(7793)'].Set(cells=
    mdb.models['Model-1'].parts['P33deg(7793)'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['P33deg(7793)'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['P33deg(7793)'].sets['Set-1'], sectionName=
    'Section-1', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='P33deg(7793)-1'
    , part=mdb.models['Model-1'].parts['P33deg(7793)'])
mdb.models['Model-1'].StaticStep(initialInc=0.01, name='Step-1', previous=
    'Initial')
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=0.56, name='UDL', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-1'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='P33deg(7793)-2'
    , part=mdb.models['Model-1'].parts['P33deg(7793)'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='P33deg(7793)-3'
    , part=mdb.models['Model-1'].parts['P33deg(7793)'])
del mdb.models['Model-1'].rootAssembly.features['P33deg(7793)-1']
del mdb.models['Model-1'].rootAssembly.features['P33deg(7793)-2']
mdb.models['Model-1'].rootAssembly.makeIndependent(instances=(
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'], ), size=
    10.0)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'].cells.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'].edges[1], 
    MIDDLE), point2=
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'].edges[5], 
    MIDDLE), point3=
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'].edges[12], 
    MIDDLE))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'], ))
mdb.models['Model-1'].FieldOutputRequest(createStepName='Step-1', name=
    'F-Output-2', variables=('S', 'MISES', 'MISESMAX', 'TSHR', 'CTSHR', 
    'ALPHA', 'TRIAX', 'VS', 'PS', 'CS11', 'ALPHAN', 'SSAVG', 'MISESONLY', 
    'PRESSONLY', 'SEQUT', 'E', 'VE', 'PE', 'VEEQ', 'PEEQ', 'PEEQT', 'PEEQMAX', 
    'PEMAG', 'PEQC', 'EE', 'IE', 'THE', 'NE', 'LE', 'TE', 'TEEQ', 'TEVOL', 
    'EEQUT', 'ER', 'SE', 'SPE', 'SEPE', 'SEE', 'SEP', 'SALPHA', 'U', 'UT', 
    'UR', 'V', 'VT', 'VR', 'RBANG', 'RBROT'))
del mdb.models['Model-1'].loads['UDL']
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-2', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'].faces.getSequenceFromMask(
    ('[#200 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=0.56, name='Load-1', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-2'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'].faces.getSequenceFromMask(
    ('[#1ec ]', ), ), name='Set-1')
mdb.models['Model-1'].ZasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-1'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'].faces.getSequenceFromMask(
    ('[#402 ]', ), ), name='Set-2')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-2'])
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST V IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VT IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT VARIABLE ALPHAN HAS NO COMPONENTS IN THIS ANALYSIS FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CS11 IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CTSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEMAG IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEVOL IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TRIAX IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VS IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SSAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 2868, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 45.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 16.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Wed Nov  6 19:32:53 2024', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST V IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VT IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT VARIABLE ALPHAN HAS NO COMPONENTS IN THIS ANALYSIS FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CS11 IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CTSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEMAG IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEVOL IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TRIAX IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VS IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SSAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 2748, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 72.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 21.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.33171875, 'attempts': 1, 
    'timeIncrement': 0.11390625, 'increment': 8, 'stepTime': 0.33171875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.502578125, 'attempts': 1, 
    'timeIncrement': 0.170859375, 'increment': 9, 'stepTime': 0.502578125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.7588671875, 'attempts': 1, 
    'timeIncrement': 0.2562890625, 'increment': 10, 'stepTime': 0.7588671875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.2411328125, 'increment': 11, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Wed Nov  6 19:33:56 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-3')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-1'].rootAssembly.sets['Set-3'])
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST V IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VT IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT VARIABLE ALPHAN HAS NO COMPONENTS IN THIS ANALYSIS FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CS11 IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CTSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEMAG IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEVOL IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TRIAX IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VS IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SSAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 9780, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 45.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 16.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Wed Nov  6 19:36:21 2024', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST V IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VT IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT VARIABLE ALPHAN HAS NO COMPONENTS IN THIS ANALYSIS FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CS11 IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CTSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEMAG IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEVOL IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TRIAX IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VS IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SSAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 7296, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 72.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 21.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.33171875, 'attempts': 1, 
    'timeIncrement': 0.11390625, 'increment': 8, 'stepTime': 0.33171875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.502578125, 'attempts': 1, 
    'timeIncrement': 0.170859375, 'increment': 9, 'stepTime': 0.502578125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.7588671875, 'attempts': 1, 
    'timeIncrement': 0.2562890625, 'increment': 10, 'stepTime': 0.7588671875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.2411328125, 'increment': 11, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Wed Nov  6 19:37:29 2024', 
    'jobName': 'Job-1'})
# Save by Admin on 2024_11_06-19.40.27; build 2018 2017_11_07-22.51.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-2', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-2'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-2']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST V IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VT IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT VARIABLE ALPHAN HAS NO COMPONENTS IN THIS ANALYSIS FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CS11 IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CTSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEMAG IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEVOL IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TRIAX IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VS IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SSAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-2.odb', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 15220, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-2', 'memory': 45.0})
mdb.jobs['Job-2']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(MINIMUM_MEMORY, {'minimum_memory': 16.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(JOB_COMPLETED, {'time': 'Tue Nov 19 00:04:05 2024', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2'].submit(consistencyChecking=OFF)
mdb.jobs['Job-2']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST V IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VT IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT VARIABLE ALPHAN HAS NO COMPONENTS IN THIS ANALYSIS FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CS11 IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CTSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEMAG IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEVOL IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TRIAX IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VS IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SSAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-2.odb', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 1108, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-2', 'memory': 72.0})
mdb.jobs['Job-2']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(MINIMUM_MEMORY, {'minimum_memory': 21.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Job-2', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Job-2', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Job-2', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Job-2', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Job-2', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Job-2', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Job-2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.33171875, 'attempts': 1, 
    'timeIncrement': 0.11390625, 'increment': 8, 'stepTime': 0.33171875, 
    'step': 1, 'jobName': 'Job-2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.502578125, 'attempts': 1, 
    'timeIncrement': 0.170859375, 'increment': 9, 'stepTime': 0.502578125, 
    'step': 1, 'jobName': 'Job-2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.7588671875, 'attempts': 1, 
    'timeIncrement': 0.2562890625, 'increment': 10, 'stepTime': 0.7588671875, 
    'step': 1, 'jobName': 'Job-2', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.2411328125, 'increment': 11, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-2', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-2']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(JOB_COMPLETED, {'time': 'Tue Nov 19 00:04:56 2024', 
    'jobName': 'Job-2'})
mdb.models['Model-1'].materials['Material-1'].elastic.setValues(table=((
    31622.7766, 0.2), ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-3', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-3'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-3']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST V IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VT IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT VARIABLE ALPHAN HAS NO COMPONENTS IN THIS ANALYSIS FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CS11 IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CTSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEMAG IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEVOL IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TRIAX IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VS IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SSAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-3.odb', 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 13468, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-3', 'memory': 45.0})
mdb.jobs['Job-3']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(MINIMUM_MEMORY, {'minimum_memory': 16.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(JOB_COMPLETED, {'time': 'Tue Nov 19 00:09:01 2024', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3'].submit(consistencyChecking=OFF)
mdb.jobs['Job-3']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST V IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VT IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT VARIABLE ALPHAN HAS NO COMPONENTS IN THIS ANALYSIS FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CS11 IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CTSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEMAG IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEVOL IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TRIAX IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VS IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SSAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-3.odb', 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 7996, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-3', 'memory': 72.0})
mdb.jobs['Job-3']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(MINIMUM_MEMORY, {'minimum_memory': 21.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Job-3', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Job-3', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Job-3', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Job-3', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Job-3', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Job-3', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Job-3', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.33171875, 'attempts': 1, 
    'timeIncrement': 0.11390625, 'increment': 8, 'stepTime': 0.33171875, 
    'step': 1, 'jobName': 'Job-3', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.502578125, 'attempts': 1, 
    'timeIncrement': 0.170859375, 'increment': 9, 'stepTime': 0.502578125, 
    'step': 1, 'jobName': 'Job-3', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.7588671875, 'attempts': 1, 
    'timeIncrement': 0.2562890625, 'increment': 10, 'stepTime': 0.7588671875, 
    'step': 1, 'jobName': 'Job-3', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.2411328125, 'increment': 11, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-3', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-3']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(JOB_COMPLETED, {'time': 'Tue Nov 19 00:09:57 2024', 
    'jobName': 'Job-3'})
# Save by Admin on 2024_11_19-00.12.54; build 2018 2017_11_07-22.51.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/30deg(69.28).sat', 
    scaleFromFile=OFF)
mdb.models['Model-1'].PartFromGeometryFile(combine=False, dimensionality=
    THREE_D, geometryFile=mdb.acis, name='deg30', type=DEFORMABLE_BODY)
mdb.models['Model-1'].HomogeneousSolidSection(material='Material-1', name=
    'Section-2', thickness=None)
mdb.models['Model-1'].parts['deg30'].Set(cells=
    mdb.models['Model-1'].parts['deg30'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-1')
mdb.models['Model-1'].parts['deg30'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['deg30'].sets['Set-1'], sectionName='Section-1'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'], ), size=
    8.0)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'], ), size=
    5.0)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['P33deg(7793)-3'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='30deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['30deg'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['30deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST V IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VT IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT VARIABLE ALPHAN HAS NO COMPONENTS IN THIS ANALYSIS FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CS11 IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CTSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEMAG IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEVOL IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TRIAX IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VS IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SSAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\30deg.odb', 'jobName': '30deg'})
mdb.jobs['30deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 13520, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '30deg', 'memory': 442.0})
mdb.jobs['30deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 76.0, 
    'phase': STANDARD_PHASE, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '30deg'})
mdb.jobs['30deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 11:34:30 2024', 
    'jobName': '30deg'})
mdb.jobs['30deg'].submit(consistencyChecking=OFF)
mdb.jobs['30deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST V IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VT IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT VARIABLE ALPHAN HAS NO COMPONENTS IN THIS ANALYSIS FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CS11 IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CTSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEMAG IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEVOL IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TRIAX IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VS IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SSAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\30deg.odb', 'jobName': '30deg'})
mdb.jobs['30deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 14064, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '30deg', 'memory': 527.0})
mdb.jobs['30deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 77.0, 
    'phase': STANDARD_PHASE, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': '30deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': '30deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': '30deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': '30deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': '30deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': '30deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': '30deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 0.33171875, 'attempts': 1, 
    'timeIncrement': 0.11390625, 'increment': 8, 'stepTime': 0.33171875, 
    'step': 1, 'jobName': '30deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 0.502578125, 'attempts': 1, 
    'timeIncrement': 0.170859375, 'increment': 9, 'stepTime': 0.502578125, 
    'step': 1, 'jobName': '30deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 0.7588671875, 'attempts': 1, 
    'timeIncrement': 0.2562890625, 'increment': 10, 'stepTime': 0.7588671875, 
    'step': 1, 'jobName': '30deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.2411328125, 'increment': 11, 'stepTime': 1.0, 'step': 1, 
    'jobName': '30deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['30deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '30deg'})
mdb.jobs['30deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 11:36:22 2024', 
    'jobName': '30deg'})
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='deg30-1', part=
    mdb.models['Model-1'].parts['deg30'])
del mdb.models['Model-1'].parts['deg30']
mdb.models['Model-1'].rootAssembly.suppressFeatures(featureNames=('deg30-1', ))
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/30deg(69.28).sat', 
    scaleFromFile=OFF)
mdb.models['Model-1'].PartFromGeometryFile(combine=False, dimensionality=
    THREE_D, geometryFile=mdb.acis, name='deg30', type=DEFORMABLE_BODY)
mdb.models['Model-1'].parts['deg30'].Set(cells=
    mdb.models['Model-1'].parts['deg30'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-1')
mdb.models['Model-1'].parts['deg30'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['deg30'].sets['Set-1'], sectionName='Section-2'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='deg30-2', part=
    mdb.models['Model-1'].parts['deg30'])
del mdb.models['Model-1'].parts['deg30']
mdb.Model(modelType=STANDARD_EXPLICIT, name='30deg')
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/30deg(69.28).sat', 
    scaleFromFile=OFF)
mdb.models['30deg'].PartFromGeometryFile(combine=False, dimensionality=THREE_D, 
    geometryFile=mdb.acis, name='deg30', type=DEFORMABLE_BODY)
mdb.models['30deg'].Material(name='Material-1')
mdb.models['30deg'].materials['Material-1'].Elastic(table=((31622.7766, 0.2), 
    ))
mdb.models['30deg'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['30deg'].parts['deg30'].Set(cells=
    mdb.models['30deg'].parts['deg30'].cells.getSequenceFromMask(('[#1 ]', ), )
    , name='Set-1')
mdb.models['30deg'].parts['deg30'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['30deg'].parts['deg30'].sets['Set-1'], sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['30deg'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['30deg'].rootAssembly.Instance(dependent=ON, name='deg30-1', part=
    mdb.models['30deg'].parts['deg30'])
mdb.models['30deg'].StaticStep(initialInc=0.1, name='Step-1', previous=
    'Initial')
mdb.models['30deg'].FieldOutputRequest(createStepName='Step-1', name=
    'F-Output-2', variables=('E', 'S', 'U'))
mdb.models['30deg'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['30deg'].rootAssembly.instances['deg30-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['30deg'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=5.0, name='Load-1', region=
    mdb.models['30deg'].rootAssembly.surfaces['Surf-1'])
del mdb.models['30deg'].loads['Load-1']
mdb.models['30deg'].rootAssembly.Surface(name='Surf-2', side1Faces=
    mdb.models['30deg'].rootAssembly.instances['deg30-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['30deg'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=5.0, name='Load-1', region=
    mdb.models['30deg'].rootAssembly.surfaces['Surf-2'])
mdb.models['30deg'].rootAssembly.Set(faces=
    mdb.models['30deg'].rootAssembly.instances['deg30-1'].faces.getSequenceFromMask(
    ('[#1e ]', ), ), name='Set-1')
mdb.models['30deg'].YasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['30deg'].rootAssembly.sets['Set-1'])
mdb.models['30deg'].rootAssembly.Set(faces=
    mdb.models['30deg'].rootAssembly.instances['deg30-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-2')
mdb.models['30deg'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['30deg'].rootAssembly.sets['Set-2'])
mdb.models['30deg'].rootAssembly.makeIndependent(instances=(
    mdb.models['30deg'].rootAssembly.instances['deg30-1'], ))
mdb.models['30deg'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['30deg'].rootAssembly.instances['deg30-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['30deg'].rootAssembly.instances['deg30-1'].vertices[1], point2=
    mdb.models['30deg'].rootAssembly.instances['deg30-1'].InterestingPoint(
    mdb.models['30deg'].rootAssembly.instances['deg30-1'].edges[5], MIDDLE), 
    point3=
    mdb.models['30deg'].rootAssembly.instances['deg30-1'].InterestingPoint(
    mdb.models['30deg'].rootAssembly.instances['deg30-1'].edges[12], MIDDLE))
mdb.models['30deg'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['30deg'].rootAssembly.instances['deg30-1'], ), size=5.0)
mdb.models['30deg'].rootAssembly.generateMesh(regions=(
    mdb.models['30deg'].rootAssembly.instances['deg30-1'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='30deg', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-5', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-5'].submit(consistencyChecking=OFF)
mdb.jobs['Job-5']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-5.odb', 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 12028, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-5', 'memory': 615.0})
mdb.jobs['Job-5']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(MINIMUM_MEMORY, {'minimum_memory': 87.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': 'Job-5', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': 'Job-5', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': 'Job-5', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.575, 'attempts': 1, 
    'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 'step': 1, 
    'jobName': 'Job-5', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.9125, 'attempts': 1, 
    'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': 'Job-5', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0874999999999999, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Job-5', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-5']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 11:53:07 2024', 
    'jobName': 'Job-5'})
# Save by Admin on 2024_11_20-11.57.13; build 2018 2017_11_07-22.51.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['Job-5']
del mdb.jobs['30deg']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='30deg', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='30deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['30deg'].submit(consistencyChecking=OFF)
mdb.jobs['30deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\30deg.odb', 'jobName': '30deg'})
mdb.jobs['30deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 2244, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '30deg', 'memory': 615.0})
mdb.jobs['30deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 87.0, 
    'phase': STANDARD_PHASE, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': '30deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': '30deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': '30deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 0.575, 'attempts': 1, 
    'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 'step': 1, 
    'jobName': '30deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 0.9125, 'attempts': 1, 
    'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': '30deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['30deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '30deg'})
mdb.jobs['30deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0874999999999999, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': '30deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['30deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '30deg'})
mdb.jobs['30deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '30deg'})
mdb.jobs['30deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 12:00:36 2024', 
    'jobName': '30deg'})
del mdb.jobs['Job-1']
del mdb.jobs['Job-2']
del mdb.jobs['Job-3']
mdb.models['Model-1'].rootAssembly.suppressFeatures(featureNames=('deg30-2', ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='33deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['33deg'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['33deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST V IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VT IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT VARIABLE ALPHAN HAS NO COMPONENTS IN THIS ANALYSIS FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CS11 IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CTSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEMAG IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEVOL IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TRIAX IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VS IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SSAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\33deg.odb', 'jobName': '33deg'})
mdb.jobs['33deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 14080, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '33deg', 'memory': 442.0})
mdb.jobs['33deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 76.0, 
    'phase': STANDARD_PHASE, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '33deg'})
mdb.jobs['33deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 12:04:43 2024', 
    'jobName': '33deg'})
mdb.jobs['33deg'].submit(consistencyChecking=OFF)
mdb.jobs['33deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST V IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VT IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE REQUEST FOR MISES OUTPUT WILL BE REPLACED BY A REQUEST FOR S OUTPUT', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT VARIABLE ALPHAN HAS NO COMPONENTS IN THIS ANALYSIS FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CS11 IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CTSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEMAG IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEQUT IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TEVOL IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TRIAX IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST TSHR IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VS IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SSAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\33deg.odb', 'jobName': '33deg'})
mdb.jobs['33deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 13708, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '33deg', 'memory': 527.0})
mdb.jobs['33deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 77.0, 
    'phase': STANDARD_PHASE, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': '33deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': '33deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': '33deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': '33deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': '33deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': '33deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': '33deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.33171875, 'attempts': 1, 
    'timeIncrement': 0.11390625, 'increment': 8, 'stepTime': 0.33171875, 
    'step': 1, 'jobName': '33deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.502578125, 'attempts': 1, 
    'timeIncrement': 0.170859375, 'increment': 9, 'stepTime': 0.502578125, 
    'step': 1, 'jobName': '33deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.7588671875, 'attempts': 1, 
    'timeIncrement': 0.2562890625, 'increment': 10, 'stepTime': 0.7588671875, 
    'step': 1, 'jobName': '33deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.2411328125, 'increment': 11, 'stepTime': 1.0, 'step': 1, 
    'jobName': '33deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['33deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '33deg'})
mdb.jobs['33deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 12:06:30 2024', 
    'jobName': '33deg'})
mdb.models['Model-1'].loads['Load-1'].setValues(magnitude=5.0)
mdb.models['Model-1'].fieldOutputRequests['F-Output-2'].setValues(variables=(
    'E', 'S', 'U'))
del mdb.jobs['33deg']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='33deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['33deg'].submit(consistencyChecking=OFF)
mdb.jobs['33deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\33deg.odb', 'jobName': '33deg'})
mdb.jobs['33deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 14032, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '33deg', 'memory': 527.0})
mdb.jobs['33deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 77.0, 
    'phase': STANDARD_PHASE, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': '33deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': '33deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': '33deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': '33deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': '33deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': '33deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': '33deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.33171875, 'attempts': 1, 
    'timeIncrement': 0.11390625, 'increment': 8, 'stepTime': 0.33171875, 
    'step': 1, 'jobName': '33deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.502578125, 'attempts': 1, 
    'timeIncrement': 0.170859375, 'increment': 9, 'stepTime': 0.502578125, 
    'step': 1, 'jobName': '33deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 0.7588671875, 'attempts': 1, 
    'timeIncrement': 0.2562890625, 'increment': 10, 'stepTime': 0.7588671875, 
    'step': 1, 'jobName': '33deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['33deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': '33deg'})
mdb.jobs['33deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.2411328125, 'increment': 11, 'stepTime': 1.0, 'step': 1, 
    'jobName': '33deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['33deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '33deg'})
mdb.jobs['33deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '33deg'})
mdb.jobs['33deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 12:11:28 2024', 
    'jobName': '33deg'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='29deg')
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/29deg(66.52).sat', 
    scaleFromFile=OFF)
mdb.models['29deg'].PartFromGeometryFile(combine=False, dimensionality=THREE_D, 
    geometryFile=mdb.acis, name='deg29', type=DEFORMABLE_BODY)
mdb.models['29deg'].Material(name='Material-1')
mdb.models['29deg'].materials['Material-1'].Elastic(table=((31622.7766, 0.2), 
    ))
mdb.models['29deg'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['29deg'].parts['deg29'].Set(cells=
    mdb.models['29deg'].parts['deg29'].cells.getSequenceFromMask(('[#1 ]', ), )
    , name='Set-1')
mdb.models['29deg'].parts['deg29'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['29deg'].parts['deg29'].sets['Set-1'], sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['29deg'].StaticStep(initialInc=0.1, name='Step-1', previous=
    'Initial')
mdb.models['29deg'].FieldOutputRequest(createStepName='Step-1', name=
    'F-Output-2', variables=('E', 'S', 'U'))
mdb.models['29deg'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['29deg'].rootAssembly.Instance(dependent=ON, name='deg29-1', part=
    mdb.models['29deg'].parts['deg29'])
mdb.models['29deg'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['29deg'].rootAssembly.instances['deg29-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['29deg'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=5.0, name='Load-1', region=
    mdb.models['29deg'].rootAssembly.surfaces['Surf-1'])
mdb.models['29deg'].rootAssembly.Set(faces=
    mdb.models['29deg'].rootAssembly.instances['deg29-1'].faces.getSequenceFromMask(
    ('[#1e ]', ), ), name='Set-1')
mdb.models['29deg'].ZasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['29deg'].rootAssembly.sets['Set-1'])
mdb.models['29deg'].rootAssembly.Set(faces=
    mdb.models['29deg'].rootAssembly.instances['deg29-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-2')
mdb.models['29deg'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['29deg'].rootAssembly.sets['Set-2'])
mdb.models['29deg'].rootAssembly.makeIndependent(instances=(
    mdb.models['29deg'].rootAssembly.instances['deg29-1'], ))
mdb.models['29deg'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['29deg'].rootAssembly.instances['deg29-1'], ), size=5.0)
mdb.models['29deg'].rootAssembly.generateMesh(regions=(
    mdb.models['29deg'].rootAssembly.instances['deg29-1'], ))
mdb.models['29deg'].rootAssembly.deleteMesh(regions=
    mdb.models['29deg'].rootAssembly.instances['deg29-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['29deg'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['29deg'].rootAssembly.instances['deg29-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['29deg'].rootAssembly.instances['deg29-1'].vertices[2], point2=
    mdb.models['29deg'].rootAssembly.instances['deg29-1'].InterestingPoint(
    mdb.models['29deg'].rootAssembly.instances['deg29-1'].edges[12], MIDDLE), 
    point3=
    mdb.models['29deg'].rootAssembly.instances['deg29-1'].InterestingPoint(
    mdb.models['29deg'].rootAssembly.instances['deg29-1'].edges[5], MIDDLE))
mdb.models['29deg'].rootAssembly.generateMesh(regions=(
    mdb.models['29deg'].rootAssembly.instances['deg29-1'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='29deg', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='29deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['29deg'].submit(consistencyChecking=OFF)
mdb.jobs['29deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '29deg'})
mdb.jobs['29deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\29deg.odb', 'jobName': '29deg'})
mdb.jobs['29deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '29deg'})
mdb.jobs['29deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 8308, 'jobName': '29deg'})
mdb.jobs['29deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '29deg'})
mdb.jobs['29deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '29deg'})
mdb.jobs['29deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '29deg', 'memory': 603.0})
mdb.jobs['29deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '29deg'})
mdb.jobs['29deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': '29deg'})
mdb.jobs['29deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '29deg'})
mdb.jobs['29deg']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': '29deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['29deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '29deg'})
mdb.jobs['29deg']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': '29deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['29deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '29deg'})
mdb.jobs['29deg']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': '29deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['29deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '29deg'})
mdb.jobs['29deg']._Message(STATUS, {'totalTime': 0.575, 'attempts': 1, 
    'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 'step': 1, 
    'jobName': '29deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['29deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '29deg'})
mdb.jobs['29deg']._Message(STATUS, {'totalTime': 0.9125, 'attempts': 1, 
    'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': '29deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['29deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '29deg'})
mdb.jobs['29deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0874999999999999, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': '29deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['29deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '29deg'})
mdb.jobs['29deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '29deg'})
mdb.jobs['29deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 12:23:35 2024', 
    'jobName': '29deg'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='28deg')
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/28deg(63.81).sat', 
    scaleFromFile=OFF)
mdb.models['28deg'].PartFromGeometryFile(combine=False, dimensionality=THREE_D, 
    geometryFile=mdb.acis, name='deg28', type=DEFORMABLE_BODY)
mdb.models['28deg'].Material(name='Material-1')
mdb.models['28deg'].materials['Material-1'].Elastic(table=((31622.77, 0.2), ))
mdb.models['28deg'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['28deg'].parts['deg28'].Set(cells=
    mdb.models['28deg'].parts['deg28'].cells.getSequenceFromMask(('[#1 ]', ), )
    , name='Set-1')
mdb.models['28deg'].parts['deg28'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['28deg'].parts['deg28'].sets['Set-1'], sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['28deg'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['28deg'].rootAssembly.Instance(dependent=ON, name='deg28-1', part=
    mdb.models['28deg'].parts['deg28'])
mdb.models['28deg'].StaticStep(initialInc=0.1, name='Step-1', previous=
    'Initial')
mdb.models['28deg'].FieldOutputRequest(createStepName='Step-1', name=
    'F-Output-2', variables=('E', 'S', 'U'))
mdb.models['28deg'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['28deg'].rootAssembly.instances['deg28-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['28deg'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=5.0, name='Load-1', region=
    mdb.models['28deg'].rootAssembly.surfaces['Surf-1'])
mdb.models['28deg'].rootAssembly.Set(faces=
    mdb.models['28deg'].rootAssembly.instances['deg28-1'].faces.getSequenceFromMask(
    ('[#1e ]', ), ), name='Set-1')
mdb.models['28deg'].ZasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['28deg'].rootAssembly.sets['Set-1'])
mdb.models['28deg'].rootAssembly.Set(faces=
    mdb.models['28deg'].rootAssembly.instances['deg28-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-2')
mdb.models['28deg'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['28deg'].rootAssembly.sets['Set-2'])
mdb.models['28deg'].rootAssembly.makeIndependent(instances=(
    mdb.models['28deg'].rootAssembly.instances['deg28-1'], ))
mdb.models['28deg'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['28deg'].rootAssembly.instances['deg28-1'], ), size=5.0)
mdb.models['28deg'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['28deg'].rootAssembly.instances['deg28-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['28deg'].rootAssembly.instances['deg28-1'].vertices[1], point2=
    mdb.models['28deg'].rootAssembly.instances['deg28-1'].InterestingPoint(
    mdb.models['28deg'].rootAssembly.instances['deg28-1'].edges[5], MIDDLE), 
    point3=
    mdb.models['28deg'].rootAssembly.instances['deg28-1'].InterestingPoint(
    mdb.models['28deg'].rootAssembly.instances['deg28-1'].edges[12], MIDDLE))
mdb.models['28deg'].rootAssembly.generateMesh(regions=(
    mdb.models['28deg'].rootAssembly.instances['deg28-1'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='28deg', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='28deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['28deg'].submit(consistencyChecking=OFF)
mdb.jobs['28deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '28deg'})
mdb.jobs['28deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\28deg.odb', 'jobName': '28deg'})
mdb.jobs['28deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '28deg'})
mdb.jobs['28deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 9688, 'jobName': '28deg'})
mdb.jobs['28deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '28deg'})
mdb.jobs['28deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '28deg'})
mdb.jobs['28deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '28deg', 'memory': 603.0})
mdb.jobs['28deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '28deg'})
mdb.jobs['28deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': '28deg'})
mdb.jobs['28deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '28deg'})
mdb.jobs['28deg']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': '28deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['28deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '28deg'})
mdb.jobs['28deg']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': '28deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['28deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '28deg'})
mdb.jobs['28deg']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': '28deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['28deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '28deg'})
mdb.jobs['28deg']._Message(STATUS, {'totalTime': 0.575, 'attempts': 1, 
    'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 'step': 1, 
    'jobName': '28deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['28deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '28deg'})
mdb.jobs['28deg']._Message(STATUS, {'totalTime': 0.9125, 'attempts': 1, 
    'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': '28deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['28deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '28deg'})
mdb.jobs['28deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0874999999999999, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': '28deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['28deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '28deg'})
mdb.jobs['28deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '28deg'})
mdb.jobs['28deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 15:36:25 2024', 
    'jobName': '28deg'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='27deg')
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/27deg(61.14).sat', 
    scaleFromFile=OFF)
mdb.models['27deg'].PartFromGeometryFile(combine=False, dimensionality=THREE_D, 
    geometryFile=mdb.acis, name='deg28', type=DEFORMABLE_BODY)
mdb.models['27deg'].Material(name='Material-1')
mdb.models['27deg'].materials['Material-1'].Elastic(table=((31622.77, 0.2), ))
mdb.models['27deg'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['27deg'].parts['deg28'].Set(cells=
    mdb.models['27deg'].parts['deg28'].cells.getSequenceFromMask(('[#1 ]', ), )
    , name='Set-1')
mdb.models['27deg'].parts['deg28'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['27deg'].parts['deg28'].sets['Set-1'], sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['27deg'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['27deg'].rootAssembly.Instance(dependent=ON, name='deg28-1', part=
    mdb.models['27deg'].parts['deg28'])
mdb.models['27deg'].StaticStep(initialInc=0.1, name='Step-1', previous=
    'Initial')
mdb.models['27deg'].FieldOutputRequest(createStepName='Step-1', name=
    'F-Output-2', variables=('E', 'S', 'U'))
mdb.models['27deg'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['27deg'].rootAssembly.instances['deg28-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['27deg'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=5.0, name='Load-1', region=
    mdb.models['27deg'].rootAssembly.surfaces['Surf-1'])
mdb.models['27deg'].rootAssembly.Set(faces=
    mdb.models['27deg'].rootAssembly.instances['deg28-1'].faces.getSequenceFromMask(
    ('[#1e ]', ), ), name='Set-1')
mdb.models['27deg'].ZasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['27deg'].rootAssembly.sets['Set-1'])
mdb.models['27deg'].rootAssembly.Set(faces=
    mdb.models['27deg'].rootAssembly.instances['deg28-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-2')
mdb.models['27deg'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['27deg'].rootAssembly.sets['Set-2'])
mdb.models['27deg'].rootAssembly.makeIndependent(instances=(
    mdb.models['27deg'].rootAssembly.instances['deg28-1'], ))
mdb.models['27deg'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['27deg'].rootAssembly.instances['deg28-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['27deg'].rootAssembly.instances['deg28-1'].vertices[1], point2=
    mdb.models['27deg'].rootAssembly.instances['deg28-1'].InterestingPoint(
    mdb.models['27deg'].rootAssembly.instances['deg28-1'].edges[5], MIDDLE), 
    point3=
    mdb.models['27deg'].rootAssembly.instances['deg28-1'].InterestingPoint(
    mdb.models['27deg'].rootAssembly.instances['deg28-1'].edges[12], MIDDLE))
mdb.models['27deg'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['27deg'].rootAssembly.instances['deg28-1'], ), size=5.0)
mdb.models['27deg'].rootAssembly.generateMesh(regions=(
    mdb.models['27deg'].rootAssembly.instances['deg28-1'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='27deg', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='27deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['27deg'].submit(consistencyChecking=OFF)
mdb.jobs['27deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '27deg'})
mdb.jobs['27deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\27deg.odb', 'jobName': '27deg'})
mdb.jobs['27deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '27deg'})
mdb.jobs['27deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 11144, 'jobName': '27deg'})
mdb.jobs['27deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '27deg'})
mdb.jobs['27deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '27deg'})
mdb.jobs['27deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '27deg', 'memory': 689.0})
mdb.jobs['27deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '27deg'})
mdb.jobs['27deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 95.0, 
    'phase': STANDARD_PHASE, 'jobName': '27deg'})
mdb.jobs['27deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '27deg'})
mdb.jobs['27deg']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': '27deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['27deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '27deg'})
mdb.jobs['27deg']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': '27deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['27deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '27deg'})
mdb.jobs['27deg']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': '27deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['27deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '27deg'})
mdb.jobs['27deg']._Message(STATUS, {'totalTime': 0.575, 'attempts': 1, 
    'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 'step': 1, 
    'jobName': '27deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['27deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '27deg'})
mdb.jobs['27deg']._Message(STATUS, {'totalTime': 0.9125, 'attempts': 1, 
    'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': '27deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['27deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '27deg'})
mdb.jobs['27deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0874999999999999, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': '27deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['27deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '27deg'})
mdb.jobs['27deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '27deg'})
mdb.jobs['27deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 15:44:07 2024', 
    'jobName': '27deg'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='deg26')
mdb.Model(modelType=STANDARD_EXPLICIT, name='26deg')
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/26deg(58.53).sat', 
    scaleFromFile=OFF)
mdb.models['26deg'].PartFromGeometryFile(combine=False, dimensionality=THREE_D, 
    geometryFile=mdb.acis, name='deg26', type=DEFORMABLE_BODY)
mdb.models['26deg'].Material(name='Material-1')
mdb.models['26deg'].materials['Material-1'].Elastic(table=((31622.77, 0.2), ))
mdb.models['26deg'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['26deg'].parts['deg26'].Set(cells=
    mdb.models['26deg'].parts['deg26'].cells.getSequenceFromMask(('[#1 ]', ), )
    , name='Set-1')
mdb.models['26deg'].parts['deg26'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['26deg'].parts['deg26'].sets['Set-1'], sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['26deg'].StaticStep(initialInc=0.1, name='Step-1', previous=
    'Initial')
mdb.models['26deg'].FieldOutputRequest(createStepName='Step-1', name=
    'F-Output-2', variables=('E', 'S', 'U'))
del mdb.models['26deg'].fieldOutputRequests['F-Output-2']
mdb.models['26deg'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['26deg'].rootAssembly.Instance(dependent=ON, name='deg26-1', part=
    mdb.models['26deg'].parts['deg26'])
mdb.models['26deg'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['26deg'].rootAssembly.instances['deg26-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['26deg'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=5.0, name='Load-1', region=
    mdb.models['26deg'].rootAssembly.surfaces['Surf-1'])
mdb.models['26deg'].rootAssembly.Set(faces=
    mdb.models['26deg'].rootAssembly.instances['deg26-1'].faces.getSequenceFromMask(
    ('[#1e ]', ), ), name='Set-1')
mdb.models['26deg'].ZasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['26deg'].rootAssembly.sets['Set-1'])
mdb.models['26deg'].rootAssembly.Set(faces=
    mdb.models['26deg'].rootAssembly.instances['deg26-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-2')
mdb.models['26deg'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['26deg'].rootAssembly.sets['Set-2'])
mdb.models['26deg'].rootAssembly.makeIndependent(instances=(
    mdb.models['26deg'].rootAssembly.instances['deg26-1'], ))
mdb.models['26deg'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['26deg'].rootAssembly.instances['deg26-1'], ), size=5.0)
mdb.models['26deg'].rootAssembly.generateMesh(regions=(
    mdb.models['26deg'].rootAssembly.instances['deg26-1'], ))
mdb.models['26deg'].rootAssembly.deleteMesh(regions=
    mdb.models['26deg'].rootAssembly.instances['deg26-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['26deg'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['26deg'].rootAssembly.instances['deg26-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['26deg'].rootAssembly.instances['deg26-1'].vertices[2], point2=
    mdb.models['26deg'].rootAssembly.instances['deg26-1'].InterestingPoint(
    mdb.models['26deg'].rootAssembly.instances['deg26-1'].edges[12], MIDDLE), 
    point3=
    mdb.models['26deg'].rootAssembly.instances['deg26-1'].InterestingPoint(
    mdb.models['26deg'].rootAssembly.instances['deg26-1'].edges[5], MIDDLE))
mdb.models['26deg'].rootAssembly.generateMesh(regions=(
    mdb.models['26deg'].rootAssembly.instances['deg26-1'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='26deg', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='26deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['26deg'].submit(consistencyChecking=OFF)
mdb.jobs['26deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '26deg'})
mdb.jobs['26deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\26deg.odb', 'jobName': '26deg'})
mdb.jobs['26deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '26deg'})
mdb.jobs['26deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 10936, 'jobName': '26deg'})
mdb.jobs['26deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '26deg'})
mdb.jobs['26deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '26deg'})
mdb.jobs['26deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '26deg', 'memory': 689.0})
mdb.jobs['26deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '26deg'})
mdb.jobs['26deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 95.0, 
    'phase': STANDARD_PHASE, 'jobName': '26deg'})
mdb.jobs['26deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '26deg'})
mdb.jobs['26deg']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': '26deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['26deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '26deg'})
mdb.jobs['26deg']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': '26deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['26deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '26deg'})
mdb.jobs['26deg']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': '26deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['26deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '26deg'})
mdb.jobs['26deg']._Message(STATUS, {'totalTime': 0.575, 'attempts': 1, 
    'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 'step': 1, 
    'jobName': '26deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['26deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '26deg'})
mdb.jobs['26deg']._Message(STATUS, {'totalTime': 0.9125, 'attempts': 1, 
    'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': '26deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['26deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '26deg'})
mdb.jobs['26deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0874999999999999, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': '26deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['26deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '26deg'})
mdb.jobs['26deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '26deg'})
mdb.jobs['26deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 15:57:57 2024', 
    'jobName': '26deg'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='25deg')
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/25deg(55.96).sat', 
    scaleFromFile=OFF)
mdb.models['25deg'].PartFromGeometryFile(combine=False, dimensionality=THREE_D, 
    geometryFile=mdb.acis, name='deg25', type=DEFORMABLE_BODY)
mdb.models['25deg'].Material(name='Material-1')
mdb.models['25deg'].materials['Material-1'].Elastic(table=((31622.77, 0.2), ))
mdb.models['25deg'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['25deg'].parts['deg25'].Set(cells=
    mdb.models['25deg'].parts['deg25'].cells.getSequenceFromMask(('[#1 ]', ), )
    , name='Set-1')
mdb.models['25deg'].parts['deg25'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['25deg'].parts['deg25'].sets['Set-1'], sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['25deg'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['25deg'].rootAssembly.Instance(dependent=ON, name='deg25-1', part=
    mdb.models['25deg'].parts['deg25'])
mdb.models['25deg'].StaticStep(initialInc=0.1, name='Step-1', previous=
    'Initial')
mdb.models['25deg'].FieldOutputRequest(createStepName='Step-1', name=
    'F-Output-2', variables=('E', 'S', 'U'))
mdb.models['25deg'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['25deg'].rootAssembly.instances['deg25-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['25deg'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=5.0, name='Load-1', region=
    mdb.models['25deg'].rootAssembly.surfaces['Surf-1'])
mdb.models['25deg'].rootAssembly.Set(faces=
    mdb.models['25deg'].rootAssembly.instances['deg25-1'].faces.getSequenceFromMask(
    ('[#1e ]', ), ), name='Set-1')
mdb.models['25deg'].ZasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['25deg'].rootAssembly.sets['Set-1'])
mdb.models['25deg'].rootAssembly.Set(faces=
    mdb.models['25deg'].rootAssembly.instances['deg25-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-2')
mdb.models['25deg'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['25deg'].rootAssembly.sets['Set-2'])
mdb.models['25deg'].rootAssembly.makeIndependent(instances=(
    mdb.models['25deg'].rootAssembly.instances['deg25-1'], ))
mdb.models['25deg'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['25deg'].rootAssembly.instances['deg25-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['25deg'].rootAssembly.instances['deg25-1'].vertices[1], point2=
    mdb.models['25deg'].rootAssembly.instances['deg25-1'].InterestingPoint(
    mdb.models['25deg'].rootAssembly.instances['deg25-1'].edges[5], MIDDLE), 
    point3=
    mdb.models['25deg'].rootAssembly.instances['deg25-1'].InterestingPoint(
    mdb.models['25deg'].rootAssembly.instances['deg25-1'].edges[12], MIDDLE))
mdb.models['25deg'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['25deg'].rootAssembly.instances['deg25-1'], ), size=5.0)
mdb.models['25deg'].rootAssembly.generateMesh(regions=(
    mdb.models['25deg'].rootAssembly.instances['deg25-1'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='25deg', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='25deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['25deg'].submit(consistencyChecking=OFF)
mdb.jobs['25deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '25deg'})
mdb.jobs['25deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\25deg.odb', 'jobName': '25deg'})
mdb.jobs['25deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '25deg'})
mdb.jobs['25deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 10628, 'jobName': '25deg'})
mdb.jobs['25deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '25deg'})
mdb.jobs['25deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '25deg'})
mdb.jobs['25deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '25deg', 'memory': 705.0})
mdb.jobs['25deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '25deg'})
mdb.jobs['25deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 96.0, 
    'phase': STANDARD_PHASE, 'jobName': '25deg'})
mdb.jobs['25deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '25deg'})
mdb.jobs['25deg']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': '25deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['25deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '25deg'})
mdb.jobs['25deg']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': '25deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['25deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '25deg'})
mdb.jobs['25deg']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': '25deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['25deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '25deg'})
mdb.jobs['25deg']._Message(STATUS, {'totalTime': 0.575, 'attempts': 1, 
    'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 'step': 1, 
    'jobName': '25deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['25deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '25deg'})
mdb.jobs['25deg']._Message(STATUS, {'totalTime': 0.9125, 'attempts': 1, 
    'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': '25deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['25deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '25deg'})
mdb.jobs['25deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0874999999999999, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': '25deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['25deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '25deg'})
mdb.jobs['25deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '25deg'})
mdb.jobs['25deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 16:06:08 2024', 
    'jobName': '25deg'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='24deg')
mdb.models['24deg'].Material(name='Material-1')
mdb.models['24deg'].materials['Material-1'].Elastic(table=((31622.77, 0.2), ))
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/24deg(53.43).sat', 
    scaleFromFile=OFF)
mdb.models['24deg'].PartFromGeometryFile(combine=False, dimensionality=THREE_D, 
    geometryFile=mdb.acis, name='deg24', type=DEFORMABLE_BODY)
mdb.models['24deg'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['24deg'].parts['deg24'].Set(cells=
    mdb.models['24deg'].parts['deg24'].cells.getSequenceFromMask(('[#1 ]', ), )
    , name='Set-1')
mdb.models['24deg'].parts['deg24'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['24deg'].parts['deg24'].sets['Set-1'], sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['24deg'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['24deg'].rootAssembly.Instance(dependent=ON, name='deg24-1', part=
    mdb.models['24deg'].parts['deg24'])
mdb.models['24deg'].StaticStep(initialInc=0.1, name='Step-1', previous=
    'Initial')
mdb.models['24deg'].FieldOutputRequest(createStepName='Step-1', name=
    'F-Output-2', variables=('E', 'U', 'S'))
mdb.models['24deg'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['24deg'].rootAssembly.instances['deg24-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['24deg'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=5.0, name='Load-1', region=
    mdb.models['24deg'].rootAssembly.surfaces['Surf-1'])
mdb.models['24deg'].rootAssembly.Set(faces=
    mdb.models['24deg'].rootAssembly.instances['deg24-1'].faces.getSequenceFromMask(
    ('[#1e ]', ), ), name='Set-1')
mdb.models['24deg'].ZasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['24deg'].rootAssembly.sets['Set-1'])
mdb.models['24deg'].rootAssembly.Set(faces=
    mdb.models['24deg'].rootAssembly.instances['deg24-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-2')
mdb.models['24deg'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['24deg'].rootAssembly.sets['Set-2'])
mdb.models['24deg'].rootAssembly.makeIndependent(instances=(
    mdb.models['24deg'].rootAssembly.instances['deg24-1'], ))
mdb.models['24deg'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['24deg'].rootAssembly.instances['deg24-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['24deg'].rootAssembly.instances['deg24-1'].vertices[1], point2=
    mdb.models['24deg'].rootAssembly.instances['deg24-1'].InterestingPoint(
    mdb.models['24deg'].rootAssembly.instances['deg24-1'].edges[5], MIDDLE), 
    point3=
    mdb.models['24deg'].rootAssembly.instances['deg24-1'].InterestingPoint(
    mdb.models['24deg'].rootAssembly.instances['deg24-1'].edges[12], MIDDLE))
mdb.models['24deg'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['24deg'].rootAssembly.instances['deg24-1'], ), size=5.0)
mdb.models['24deg'].rootAssembly.generateMesh(regions=(
    mdb.models['24deg'].rootAssembly.instances['deg24-1'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='24deg', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='24deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['24deg'].submit(consistencyChecking=OFF)
mdb.jobs['24deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '24deg'})
mdb.jobs['24deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\24deg.odb', 'jobName': '24deg'})
mdb.jobs['24deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '24deg'})
mdb.jobs['24deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 6500, 'jobName': '24deg'})
mdb.jobs['24deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '24deg'})
mdb.jobs['24deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '24deg'})
mdb.jobs['24deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '24deg', 'memory': 705.0})
mdb.jobs['24deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '24deg'})
mdb.jobs['24deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 96.0, 
    'phase': STANDARD_PHASE, 'jobName': '24deg'})
mdb.jobs['24deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '24deg'})
mdb.jobs['24deg']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': '24deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['24deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '24deg'})
mdb.jobs['24deg']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': '24deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['24deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '24deg'})
mdb.jobs['24deg']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': '24deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['24deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '24deg'})
mdb.jobs['24deg']._Message(STATUS, {'totalTime': 0.575, 'attempts': 1, 
    'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 'step': 1, 
    'jobName': '24deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['24deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '24deg'})
mdb.jobs['24deg']._Message(STATUS, {'totalTime': 0.9125, 'attempts': 1, 
    'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': '24deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['24deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '24deg'})
mdb.jobs['24deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0874999999999999, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': '24deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['24deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '24deg'})
mdb.jobs['24deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '24deg'})
mdb.jobs['24deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 16:14:30 2024', 
    'jobName': '24deg'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='23deg')
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/23deg(50.94).sat', 
    scaleFromFile=OFF)
mdb.models['23deg'].PartFromGeometryFile(combine=False, dimensionality=THREE_D, 
    geometryFile=mdb.acis, name='deg23', type=DEFORMABLE_BODY)
mdb.models['23deg'].Material(name='Material-1')
mdb.models['23deg'].materials['Material-1'].Elastic(table=((31622.77, 0.2), ))
mdb.models['23deg'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['23deg'].parts['deg23'].Set(cells=
    mdb.models['23deg'].parts['deg23'].cells.getSequenceFromMask(('[#1 ]', ), )
    , name='Set-1')
mdb.models['23deg'].parts['deg23'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['23deg'].parts['deg23'].sets['Set-1'], sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['23deg'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['23deg'].rootAssembly.Instance(dependent=ON, name='deg23-1', part=
    mdb.models['23deg'].parts['deg23'])
mdb.models['23deg'].StaticStep(initialInc=0.1, name='Step-1', previous=
    'Initial')
mdb.models['23deg'].FieldOutputRequest(createStepName='Step-1', name=
    'F-Output-2', variables=('E', 'S', 'U'))
mdb.models['23deg'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['23deg'].rootAssembly.instances['deg23-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['23deg'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=5.0, name='Load-1', region=
    mdb.models['23deg'].rootAssembly.surfaces['Surf-1'])
mdb.models['23deg'].rootAssembly.Set(faces=
    mdb.models['23deg'].rootAssembly.instances['deg23-1'].faces.getSequenceFromMask(
    ('[#1e ]', ), ), name='Set-1')
mdb.models['23deg'].ZasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['23deg'].rootAssembly.sets['Set-1'])
mdb.models['23deg'].rootAssembly.Set(faces=
    mdb.models['23deg'].rootAssembly.instances['deg23-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-2')
mdb.models['23deg'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['23deg'].rootAssembly.sets['Set-2'])
mdb.models['23deg'].rootAssembly.makeIndependent(instances=(
    mdb.models['23deg'].rootAssembly.instances['deg23-1'], ))
mdb.models['23deg'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['23deg'].rootAssembly.instances['deg23-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['23deg'].rootAssembly.instances['deg23-1'].vertices[1], point2=
    mdb.models['23deg'].rootAssembly.instances['deg23-1'].InterestingPoint(
    mdb.models['23deg'].rootAssembly.instances['deg23-1'].edges[5], MIDDLE), 
    point3=
    mdb.models['23deg'].rootAssembly.instances['deg23-1'].InterestingPoint(
    mdb.models['23deg'].rootAssembly.instances['deg23-1'].edges[12], MIDDLE))
mdb.models['23deg'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['23deg'].rootAssembly.instances['deg23-1'], ), size=5.0)
mdb.models['23deg'].rootAssembly.generateMesh(regions=(
    mdb.models['23deg'].rootAssembly.instances['deg23-1'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='23deg', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='23deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['23deg'].submit(consistencyChecking=OFF)
mdb.jobs['23deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '23deg'})
mdb.jobs['23deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\23deg.odb', 'jobName': '23deg'})
mdb.jobs['23deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23deg'})
mdb.jobs['23deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 2536, 'jobName': '23deg'})
mdb.jobs['23deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23deg'})
mdb.jobs['23deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23deg'})
mdb.jobs['23deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '23deg', 'memory': 705.0})
mdb.jobs['23deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '23deg'})
mdb.jobs['23deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 96.0, 
    'phase': STANDARD_PHASE, 'jobName': '23deg'})
mdb.jobs['23deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23deg'})
mdb.jobs['23deg']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': '23deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['23deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '23deg'})
mdb.jobs['23deg']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': '23deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['23deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '23deg'})
mdb.jobs['23deg']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': '23deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['23deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '23deg'})
mdb.jobs['23deg']._Message(STATUS, {'totalTime': 0.575, 'attempts': 1, 
    'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 'step': 1, 
    'jobName': '23deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['23deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '23deg'})
mdb.jobs['23deg']._Message(STATUS, {'totalTime': 0.9125, 'attempts': 1, 
    'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': '23deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['23deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '23deg'})
mdb.jobs['23deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0874999999999999, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': '23deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['23deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23deg'})
mdb.jobs['23deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23deg'})
mdb.jobs['23deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 16:21:13 2024', 
    'jobName': '23deg'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='22deg')
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/22deg(48.48).sat', 
    scaleFromFile=OFF)
mdb.models['22deg'].PartFromGeometryFile(combine=False, dimensionality=THREE_D, 
    geometryFile=mdb.acis, name='deg22', type=DEFORMABLE_BODY)
mdb.models['22deg'].Material(name='Material-1')
mdb.models['22deg'].materials['Material-1'].Elastic(table=((31622.7, 0.2), ))
mdb.models['22deg'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['22deg'].parts['deg22'].Set(cells=
    mdb.models['22deg'].parts['deg22'].cells.getSequenceFromMask(('[#1 ]', ), )
    , name='Set-1')
mdb.models['22deg'].parts['deg22'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['22deg'].parts['deg22'].sets['Set-1'], sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['22deg'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['22deg'].rootAssembly.Instance(dependent=ON, name='deg22-1', part=
    mdb.models['22deg'].parts['deg22'])
mdb.models['22deg'].StaticStep(initialInc=0.1, name='Step-1', previous=
    'Initial')
mdb.models['22deg'].FieldOutputRequest(createStepName='Step-1', name=
    'F-Output-2', variables=('E', 'S', 'U'))
mdb.models['22deg'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['22deg'].rootAssembly.instances['deg22-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['22deg'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=5.0, name='Load-1', region=
    mdb.models['22deg'].rootAssembly.surfaces['Surf-1'])
mdb.models['22deg'].rootAssembly.Set(faces=
    mdb.models['22deg'].rootAssembly.instances['deg22-1'].faces.getSequenceFromMask(
    ('[#1e ]', ), ), name='Set-1')
mdb.models['22deg'].ZasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['22deg'].rootAssembly.sets['Set-1'])
mdb.models['22deg'].rootAssembly.Set(faces=
    mdb.models['22deg'].rootAssembly.instances['deg22-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-2')
mdb.models['22deg'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['22deg'].rootAssembly.sets['Set-2'])
mdb.models['22deg'].rootAssembly.makeIndependent(instances=(
    mdb.models['22deg'].rootAssembly.instances['deg22-1'], ))
mdb.models['22deg'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['22deg'].rootAssembly.instances['deg22-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['22deg'].rootAssembly.instances['deg22-1'].vertices[1], point2=
    mdb.models['22deg'].rootAssembly.instances['deg22-1'].InterestingPoint(
    mdb.models['22deg'].rootAssembly.instances['deg22-1'].edges[5], MIDDLE), 
    point3=
    mdb.models['22deg'].rootAssembly.instances['deg22-1'].InterestingPoint(
    mdb.models['22deg'].rootAssembly.instances['deg22-1'].edges[12], MIDDLE))
mdb.models['22deg'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['22deg'].rootAssembly.instances['deg22-1'], ), size=5.0)
mdb.models['22deg'].rootAssembly.generateMesh(regions=(
    mdb.models['22deg'].rootAssembly.instances['deg22-1'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='22deg', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='22deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['22deg'].submit(consistencyChecking=OFF)
mdb.jobs['22deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '22deg'})
mdb.jobs['22deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\22deg.odb', 'jobName': '22deg'})
mdb.jobs['22deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '22deg'})
mdb.jobs['22deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 2004, 'jobName': '22deg'})
mdb.jobs['22deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '22deg'})
mdb.jobs['22deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '22deg'})
mdb.jobs['22deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '22deg', 'memory': 705.0})
mdb.jobs['22deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '22deg'})
mdb.jobs['22deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 96.0, 
    'phase': STANDARD_PHASE, 'jobName': '22deg'})
mdb.jobs['22deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '22deg'})
mdb.jobs['22deg']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': '22deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['22deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '22deg'})
mdb.jobs['22deg']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': '22deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['22deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '22deg'})
mdb.jobs['22deg']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': '22deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['22deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '22deg'})
mdb.jobs['22deg']._Message(STATUS, {'totalTime': 0.575, 'attempts': 1, 
    'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 'step': 1, 
    'jobName': '22deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['22deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '22deg'})
mdb.jobs['22deg']._Message(STATUS, {'totalTime': 0.9125, 'attempts': 1, 
    'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': '22deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['22deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '22deg'})
mdb.jobs['22deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0874999999999999, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': '22deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['22deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '22deg'})
mdb.jobs['22deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '22deg'})
mdb.jobs['22deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 16:30:09 2024', 
    'jobName': '22deg'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='deg21')
mdb.Model(modelType=STANDARD_EXPLICIT, name='21deg')
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/21deg(46.06).sat', 
    scaleFromFile=OFF)
mdb.models['21deg'].PartFromGeometryFile(combine=False, dimensionality=THREE_D, 
    geometryFile=mdb.acis, name='deg21', type=DEFORMABLE_BODY)
mdb.models['21deg'].Material(name='Material-1')
mdb.models['21deg'].materials['Material-1'].Elastic(table=((31622.77, 0.2), ))
mdb.models['21deg'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['21deg'].parts['deg21'].Set(cells=
    mdb.models['21deg'].parts['deg21'].cells.getSequenceFromMask(('[#1 ]', ), )
    , name='Set-1')
mdb.models['21deg'].parts['deg21'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['21deg'].parts['deg21'].sets['Set-1'], sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['21deg'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['21deg'].rootAssembly.Instance(dependent=ON, name='deg21-1', part=
    mdb.models['21deg'].parts['deg21'])
mdb.models['21deg'].StaticStep(initialInc=0.1, name='Step-1', previous=
    'Initial')
mdb.models['21deg'].FieldOutputRequest(createStepName='Step-1', name=
    'F-Output-2', variables=('E', 'S', 'U'))
mdb.models['21deg'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['21deg'].rootAssembly.instances['deg21-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['21deg'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=5.0, name='Load-1', region=
    mdb.models['21deg'].rootAssembly.surfaces['Surf-1'])
mdb.models['21deg'].rootAssembly.Set(faces=
    mdb.models['21deg'].rootAssembly.instances['deg21-1'].faces.getSequenceFromMask(
    ('[#1e ]', ), ), name='Set-1')
mdb.models['21deg'].ZasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['21deg'].rootAssembly.sets['Set-1'])
mdb.models['21deg'].rootAssembly.Set(faces=
    mdb.models['21deg'].rootAssembly.instances['deg21-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-2')
mdb.models['21deg'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['21deg'].rootAssembly.sets['Set-2'])
mdb.models['21deg'].rootAssembly.makeIndependent(instances=(
    mdb.models['21deg'].rootAssembly.instances['deg21-1'], ))
mdb.models['21deg'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['21deg'].rootAssembly.instances['deg21-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['21deg'].rootAssembly.instances['deg21-1'].vertices[2], point2=
    mdb.models['21deg'].rootAssembly.instances['deg21-1'].InterestingPoint(
    mdb.models['21deg'].rootAssembly.instances['deg21-1'].edges[12], MIDDLE), 
    point3=
    mdb.models['21deg'].rootAssembly.instances['deg21-1'].InterestingPoint(
    mdb.models['21deg'].rootAssembly.instances['deg21-1'].edges[5], MIDDLE))
mdb.models['21deg'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['21deg'].rootAssembly.instances['deg21-1'], ), size=5.0)
mdb.models['21deg'].rootAssembly.generateMesh(regions=(
    mdb.models['21deg'].rootAssembly.instances['deg21-1'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='21deg', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='21deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['21deg'].submit(consistencyChecking=OFF)
mdb.jobs['21deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '21deg'})
mdb.jobs['21deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\21deg.odb', 'jobName': '21deg'})
mdb.jobs['21deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '21deg'})
mdb.jobs['21deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 8992, 'jobName': '21deg'})
mdb.jobs['21deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '21deg'})
mdb.jobs['21deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '21deg'})
mdb.jobs['21deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '21deg', 'memory': 793.0})
mdb.jobs['21deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '21deg'})
mdb.jobs['21deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 107.0, 
    'phase': STANDARD_PHASE, 'jobName': '21deg'})
mdb.jobs['21deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '21deg'})
mdb.jobs['21deg']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': '21deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['21deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '21deg'})
mdb.jobs['21deg']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': '21deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['21deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '21deg'})
mdb.jobs['21deg']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': '21deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['21deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '21deg'})
mdb.jobs['21deg']._Message(STATUS, {'totalTime': 0.575, 'attempts': 1, 
    'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 'step': 1, 
    'jobName': '21deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['21deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '21deg'})
mdb.jobs['21deg']._Message(STATUS, {'totalTime': 0.9125, 'attempts': 1, 
    'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': '21deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['21deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '21deg'})
mdb.jobs['21deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0874999999999999, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': '21deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['21deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '21deg'})
mdb.jobs['21deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '21deg'})
mdb.jobs['21deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 18:34:05 2024', 
    'jobName': '21deg'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='deg20')
mdb.Model(modelType=STANDARD_EXPLICIT, name='20deg')
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/20deg(43.68).sat', 
    scaleFromFile=OFF)
mdb.models['20deg'].PartFromGeometryFile(combine=False, dimensionality=THREE_D, 
    geometryFile=mdb.acis, name='deg20', type=DEFORMABLE_BODY)
mdb.models['20deg'].Material(name='Material-1')
mdb.models['20deg'].materials['Material-1'].Elastic(table=((31622.77, 0.2), ))
mdb.models['20deg'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['20deg'].parts['deg20'].Set(cells=
    mdb.models['20deg'].parts['deg20'].cells.getSequenceFromMask(('[#1 ]', ), )
    , name='Set-1')
mdb.models['20deg'].parts['deg20'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['20deg'].parts['deg20'].sets['Set-1'], sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['20deg'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['20deg'].rootAssembly.Instance(dependent=ON, name='deg20-1', part=
    mdb.models['20deg'].parts['deg20'])
mdb.models['20deg'].StaticStep(initialInc=0.1, name='Step-1', previous=
    'Initial')
mdb.models['20deg'].FieldOutputRequest(createStepName='Step-1', name=
    'F-Output-2', variables=('E', 'S', 'U'))
mdb.models['20deg'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['20deg'].rootAssembly.instances['deg20-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['20deg'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=5.0, name='Load-1', region=
    mdb.models['20deg'].rootAssembly.surfaces['Surf-1'])
mdb.models['20deg'].rootAssembly.Set(faces=
    mdb.models['20deg'].rootAssembly.instances['deg20-1'].faces.getSequenceFromMask(
    ('[#1e ]', ), ), name='Set-1')
mdb.models['20deg'].ZasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['20deg'].rootAssembly.sets['Set-1'])
mdb.models['20deg'].rootAssembly.Set(faces=
    mdb.models['20deg'].rootAssembly.instances['deg20-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-2')
mdb.models['20deg'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['20deg'].rootAssembly.sets['Set-2'])
mdb.models['20deg'].rootAssembly.makeIndependent(instances=(
    mdb.models['20deg'].rootAssembly.instances['deg20-1'], ))
mdb.models['20deg'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['20deg'].rootAssembly.instances['deg20-1'], ), size=5.0)
mdb.models['20deg'].rootAssembly.generateMesh(regions=(
    mdb.models['20deg'].rootAssembly.instances['deg20-1'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='20deg', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='20deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['20deg'].submit(consistencyChecking=OFF)
mdb.jobs['20deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '20deg'})
mdb.jobs['20deg']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1101 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '20deg'})
mdb.jobs['20deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\20deg.odb', 'jobName': '20deg'})
mdb.jobs['20deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '20deg'})
mdb.jobs['20deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 9120, 'jobName': '20deg'})
mdb.jobs['20deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '20deg'})
mdb.jobs['20deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '20deg'})
mdb.jobs['20deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '20deg', 'memory': 707.0})
mdb.jobs['20deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '20deg'})
mdb.jobs['20deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 104.0, 
    'phase': STANDARD_PHASE, 'jobName': '20deg'})
mdb.jobs['20deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '20deg'})
mdb.jobs['20deg']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': '20deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['20deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '20deg'})
mdb.jobs['20deg']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': '20deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['20deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '20deg'})
mdb.jobs['20deg']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': '20deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['20deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '20deg'})
mdb.jobs['20deg']._Message(STATUS, {'totalTime': 0.575, 'attempts': 1, 
    'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 'step': 1, 
    'jobName': '20deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['20deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '20deg'})
mdb.jobs['20deg']._Message(STATUS, {'totalTime': 0.9125, 'attempts': 1, 
    'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': '20deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['20deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '20deg'})
mdb.jobs['20deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0874999999999999, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': '20deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['20deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '20deg'})
mdb.jobs['20deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '20deg'})
mdb.jobs['20deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 18:43:04 2024', 
    'jobName': '20deg'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='19deg')
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/1deg(2.09).sat', 
    scaleFromFile=OFF)
mdb.models['19deg'].PartFromGeometryFile(combine=False, dimensionality=THREE_D, 
    geometryFile=mdb.acis, name='deg19', type=DEFORMABLE_BODY)
del mdb.models['19deg']
mdb.Model(modelType=STANDARD_EXPLICIT, name='19deg')
mdb.models['19deg'].keywordBlock.synchVersions(storeNodesAndElements=False)
mdb.models['19deg'].keywordBlock.setValues(edited=0)
mdb.models.changeKey(fromName='19deg', toName='18deg')
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/18deg(38.99).sat', 
    scaleFromFile=OFF)
mdb.models['18deg'].PartFromGeometryFile(combine=False, dimensionality=THREE_D, 
    geometryFile=mdb.acis, name='deg18', type=DEFORMABLE_BODY)
mdb.models['18deg'].Material(name='Material-1')
mdb.models['18deg'].materials['Material-1'].Elastic(table=((31622.77, 0.2), ))
mdb.models['18deg'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['18deg'].parts['deg18'].Set(cells=
    mdb.models['18deg'].parts['deg18'].cells.getSequenceFromMask(('[#1 ]', ), )
    , name='Set-1')
mdb.models['18deg'].parts['deg18'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['18deg'].parts['deg18'].sets['Set-1'], sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['18deg'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['18deg'].rootAssembly.Instance(dependent=ON, name='deg18-1', part=
    mdb.models['18deg'].parts['deg18'])
mdb.models['18deg'].StaticStep(initialInc=0.1, name='Step-1', previous=
    'Initial')
mdb.models['18deg'].FieldOutputRequest(createStepName='Step-1', name=
    'F-Output-2', variables=('E', 'S', 'U'))
mdb.models['18deg'].TabularAmplitude(data=((0.1, 514.8), (0.2, 1029.6), (0.3, 
    1544.4), (0.4, 2059.2), (0.5, 2574.0), (0.6, 3088.8), (0.7, 3603.6), (0.8, 
    4118.4), (0.9, 4633.2), (1.0, 5148.0)), name='Amp-1', smooth=SOLVER_DEFAULT
    , timeSpan=STEP)
mdb.models['18deg'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['18deg'].rootAssembly.instances['deg18-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['18deg'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=1.0, name='Load-1', region=
    mdb.models['18deg'].rootAssembly.surfaces['Surf-1'])
mdb.models['18deg'].rootAssembly.Set(faces=
    mdb.models['18deg'].rootAssembly.instances['deg18-1'].faces.getSequenceFromMask(
    ('[#1e ]', ), ), name='Set-1')
mdb.models['18deg'].ZasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['18deg'].rootAssembly.sets['Set-1'])
mdb.models['18deg'].rootAssembly.Set(faces=
    mdb.models['18deg'].rootAssembly.instances['deg18-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-2')
mdb.models['18deg'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['18deg'].rootAssembly.sets['Set-2'])
mdb.models['18deg'].rootAssembly.makeIndependent(instances=(
    mdb.models['18deg'].rootAssembly.instances['deg18-1'], ))
mdb.models['18deg'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['18deg'].rootAssembly.instances['deg18-1'], ), size=5.0)
mdb.models['18deg'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['18deg'].rootAssembly.instances['deg18-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['18deg'].rootAssembly.instances['deg18-1'].vertices[1], point2=
    mdb.models['18deg'].rootAssembly.instances['deg18-1'].InterestingPoint(
    mdb.models['18deg'].rootAssembly.instances['deg18-1'].edges[5], MIDDLE), 
    point3=
    mdb.models['18deg'].rootAssembly.instances['deg18-1'].InterestingPoint(
    mdb.models['18deg'].rootAssembly.instances['deg18-1'].edges[12], MIDDLE))
mdb.models['18deg'].rootAssembly.generateMesh(regions=(
    mdb.models['18deg'].rootAssembly.instances['deg18-1'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='18deg', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='18deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['18deg'].submit(consistencyChecking=OFF)
mdb.jobs['18deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '18deg'})
mdb.jobs['18deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\18deg.odb', 'jobName': '18deg'})
mdb.jobs['18deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '18deg'})
mdb.jobs['18deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 4728, 'jobName': '18deg'})
mdb.jobs['18deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '18deg'})
mdb.jobs['18deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '18deg'})
mdb.jobs['18deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '18deg', 'memory': 863.0})
mdb.jobs['18deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '18deg'})
mdb.jobs['18deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 117.0, 
    'phase': STANDARD_PHASE, 'jobName': '18deg'})
mdb.jobs['18deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '18deg'})
mdb.jobs['18deg']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': '18deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['18deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '18deg'})
mdb.jobs['18deg']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': '18deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['18deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '18deg'})
mdb.jobs['18deg']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': '18deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['18deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '18deg'})
mdb.jobs['18deg']._Message(STATUS, {'totalTime': 0.575, 'attempts': 1, 
    'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 'step': 1, 
    'jobName': '18deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['18deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '18deg'})
mdb.jobs['18deg']._Message(STATUS, {'totalTime': 0.9125, 'attempts': 1, 
    'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': '18deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['18deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '18deg'})
mdb.jobs['18deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0874999999999999, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': '18deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['18deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '18deg'})
mdb.jobs['18deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '18deg'})
mdb.jobs['18deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 19:00:44 2024', 
    'jobName': '18deg'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='17deg')
mdb.openAcis('C:/Users/Admin/Desktop/bhanu term project/17deg(36.69).sat', 
    scaleFromFile=OFF)
mdb.models['17deg'].PartFromGeometryFile(combine=False, dimensionality=THREE_D, 
    geometryFile=mdb.acis, name='deg17', type=DEFORMABLE_BODY)
mdb.models['17deg'].Material(name='Material-1')
mdb.models['17deg'].materials['Material-1'].Elastic(table=((31622.77, 0.2), ))
mdb.models['17deg'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['17deg'].parts['deg17'].Set(cells=
    mdb.models['17deg'].parts['deg17'].cells.getSequenceFromMask(('[#1 ]', ), )
    , name='Set-1')
mdb.models['17deg'].parts['deg17'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['17deg'].parts['deg17'].sets['Set-1'], sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['17deg'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['17deg'].rootAssembly.Instance(dependent=ON, name='deg17-1', part=
    mdb.models['17deg'].parts['deg17'])
mdb.models['17deg'].StaticStep(initialInc=0.1, name='Step-1', previous=
    'Initial')
mdb.models['17deg'].FieldOutputRequest(createStepName='Step-1', name=
    'F-Output-2', variables=('E', 'S', 'U'))
mdb.models['17deg'].TabularAmplitude(data=((0.1, 514.8), (0.2, 1029.6), (0.3, 
    1544.4), (0.4, 2059.2), (0.5, 2574.0), (0.6, 3088.8), (0.7, 3603.6), (0.8, 
    4118.4), (0.9, 4633.2), (1.0, 5148.0)), name='Amp-1', smooth=SOLVER_DEFAULT
    , timeSpan=STEP)
mdb.models['17deg'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['17deg'].rootAssembly.instances['deg17-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['17deg'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=1.0, name='Load-1', region=
    mdb.models['17deg'].rootAssembly.surfaces['Surf-1'])
mdb.models['17deg'].rootAssembly.Set(faces=
    mdb.models['17deg'].rootAssembly.instances['deg17-1'].faces.getSequenceFromMask(
    ('[#1e ]', ), ), name='Set-1')
mdb.models['17deg'].ZasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['17deg'].rootAssembly.sets['Set-1'])
mdb.models['17deg'].rootAssembly.Set(faces=
    mdb.models['17deg'].rootAssembly.instances['deg17-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-2')
mdb.models['17deg'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['17deg'].rootAssembly.sets['Set-2'])
mdb.models['17deg'].rootAssembly.makeIndependent(instances=(
    mdb.models['17deg'].rootAssembly.instances['deg17-1'], ))
mdb.models['17deg'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['17deg'].rootAssembly.instances['deg17-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['17deg'].rootAssembly.instances['deg17-1'].vertices[1], point2=
    mdb.models['17deg'].rootAssembly.instances['deg17-1'].InterestingPoint(
    mdb.models['17deg'].rootAssembly.instances['deg17-1'].edges[5], MIDDLE), 
    point3=
    mdb.models['17deg'].rootAssembly.instances['deg17-1'].InterestingPoint(
    mdb.models['17deg'].rootAssembly.instances['deg17-1'].edges[12], MIDDLE))
mdb.models['17deg'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['17deg'].rootAssembly.instances['deg17-1'], ), size=5.0)
mdb.models['17deg'].rootAssembly.generateMesh(regions=(
    mdb.models['17deg'].rootAssembly.instances['deg17-1'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='17deg', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='17deg', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['17deg'].submit(consistencyChecking=OFF)
mdb.jobs['17deg']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': '17deg'})
mdb.jobs['17deg']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\17deg.odb', 'jobName': '17deg'})
mdb.jobs['17deg']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '17deg'})
mdb.jobs['17deg']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 2292, 'jobName': '17deg'})
mdb.jobs['17deg']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '17deg'})
mdb.jobs['17deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '17deg'})
mdb.jobs['17deg']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '17deg', 'memory': 863.0})
mdb.jobs['17deg']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': '17deg'})
mdb.jobs['17deg']._Message(MINIMUM_MEMORY, {'minimum_memory': 117.0, 
    'phase': STANDARD_PHASE, 'jobName': '17deg'})
mdb.jobs['17deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '17deg'})
mdb.jobs['17deg']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': '17deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['17deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '17deg'})
mdb.jobs['17deg']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': '17deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['17deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '17deg'})
mdb.jobs['17deg']._Message(STATUS, {'totalTime': 0.35, 'attempts': 1, 
    'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 'step': 1, 
    'jobName': '17deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['17deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '17deg'})
mdb.jobs['17deg']._Message(STATUS, {'totalTime': 0.575, 'attempts': 1, 
    'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 'step': 1, 
    'jobName': '17deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['17deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '17deg'})
mdb.jobs['17deg']._Message(STATUS, {'totalTime': 0.9125, 'attempts': 1, 
    'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 'step': 1, 
    'jobName': '17deg', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['17deg']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '17deg'})
mdb.jobs['17deg']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0874999999999999, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': '17deg', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['17deg']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '17deg'})
mdb.jobs['17deg']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '17deg'})
mdb.jobs['17deg']._Message(JOB_COMPLETED, {'time': 'Wed Nov 20 19:13:07 2024', 
    'jobName': '17deg'})
# Save by Admin on 2024_11_20-20.12.58; build 2018 2017_11_07-22.51.41 127140
# Save by Admin on 2024_11_21-04.22.52; build 2018 2017_11_07-22.51.41 127140
