# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=10.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(8.0, 0.75))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1'].BaseSolidExtrude(depth=8.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=10.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(8.0, 3.75))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-2', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-2'].BaseSolidExtrude(depth=8.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Material-1')
mdb.models['Model-1'].materials['Material-1'].Density(table=((2000.0, ), ))
mdb.models['Model-1'].materials['Material-1'].MohrCoulombPlasticity(table=((
    31.0, 0.1), ))
mdb.models['Model-1'].materials['Material-1'].mohrCoulombPlasticity.MohrCoulombHardening(
    table=((2800.0, 0.0), ))
mdb.models['Model-1'].materials['Material-1'].mohrCoulombPlasticity.TensionCutOff(
    dependencies=0, table=((0.0, 0.0), ), temperatureDependency=OFF)
mdb.models['Model-1'].Material(name='Material-2')
mdb.models['Model-1'].materials['Material-2'].Density(table=((2100.0, ), ))
mdb.models['Model-1'].materials['Material-2'].MohrCoulombPlasticity(table=((
    26.5, 0.1), ))
mdb.models['Model-1'].materials['Material-2'].mohrCoulombPlasticity.MohrCoulombHardening(
    table=((4910.0, 0.0), ))
mdb.models['Model-1'].materials['Material-2'].mohrCoulombPlasticity.TensionCutOff(
    dependencies=0, table=((0.0, 0.0), ), temperatureDependency=OFF)
mdb.models['Model-1'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='Material-2', name=
    'Section-2', thickness=None)
mdb.models['Model-1'].parts['Part-2'].Set(cells=
    mdb.models['Model-1'].parts['Part-2'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-2'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-2'].sets['Set-1'], sectionName=
    'Section-2', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Part-1'].Set(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-1'].sets['Set-1'], sectionName=
    'Section-1', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.56, name='__profile__', 
    sheetSize=22.67, transform=
    mdb.models['Model-1'].parts['Part-1'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Part-1'].faces[1], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['Part-1'].edges[1], 
    sketchOrientation=RIGHT, origin=(4.0, 0.75, 4.0)))
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(3.25, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.75, 0.75))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(-0.75, -0.75))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.75, -0.75))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.75, 0.75), 
    point2=(-0.75, -0.75))
mdb.models['Model-1'].parts['Part-1'].CutExtrude(flipExtrudeDirection=OFF, 
    sketch=mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=
    RIGHT, sketchPlane=mdb.models['Model-1'].parts['Part-1'].faces[1], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['Model-1'].parts['Part-1'].edges[1])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.59, name='__profile__', 
    sheetSize=23.83, transform=
    mdb.models['Model-1'].parts['Part-2'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Part-2'].faces[1], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['Part-2'].edges[1], 
    sketchOrientation=RIGHT, origin=(4.0, 3.75, 4.0)))
mdb.models['Model-1'].parts['Part-2'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.75, 0.75))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(-0.75, -0.75))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.75, -0.75))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.75, 0.75), 
    point2=(-0.75, -0.75))
mdb.models['Model-1'].parts['Part-2'].CutExtrude(depth=0.5, 
    flipExtrudeDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=RIGHT, 
    sketchPlane=mdb.models['Model-1'].parts['Part-2'].faces[1], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['Model-1'].parts['Part-2'].edges[1])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-2-1', 
    part=mdb.models['Model-1'].parts['Part-2'])
mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].translate(vector=(8.8, 
    0.0, 0.0))
mdb.models['Model-1'].ContactProperty('IntProp-1')
mdb.models['Model-1'].interactionProperties['IntProp-1'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.48, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#80 ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    clearanceRegion=None, createStepName='Initial', datumAxis=None, 
    initialClearance=OMIT, interactionProperty='IntProp-1', master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-1'], name='Int-1', 
    slave=mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-1'], sliding=
    FINITE, thickness=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-3', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-3', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#80 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-3'], name=
    'Constraint-1', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-3'], thickness=ON, 
    tieRotations=ON)
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-1', ), 
    vector=(8.8, 3.75, 0.0))
mdb.models['Model-1'].StaticStep(initialInc=0.01, name='Step-1', previous=
    'Initial')
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'E', 'S', 'U'))
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#100 ]', ), ), name='Set-1')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-1'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    mask=('[#6a0 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    mask=('[#350 ]', ), ), name='Set-2')
mdb.models['Model-1'].YasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-2'])
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-5', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#10 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=15070555.56, name='Load-1', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['Surf-5'])
mdb.models['Model-1'].parts['Part-2'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['Part-2'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Part-2'].vertices[2], point2=
    mdb.models['Model-1'].parts['Part-2'].vertices[7], point3=
    mdb.models['Model-1'].parts['Part-2'].vertices[6])
mdb.models['Model-1'].parts['Part-2'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['Part-2'].cells.getSequenceFromMask(('[#2 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Part-2'].vertices[17], point2=
    mdb.models['Model-1'].parts['Part-2'].vertices[14], point3=
    mdb.models['Model-1'].parts['Part-2'].vertices[16])
mdb.models['Model-1'].parts['Part-2'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['Part-2'].cells.getSequenceFromMask(('[#7 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Part-2'].vertices[11], point2=
    mdb.models['Model-1'].parts['Part-2'].vertices[16], point3=
    mdb.models['Model-1'].parts['Part-2'].vertices[0])
mdb.models['Model-1'].parts['Part-2'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['Part-2'].cells.getSequenceFromMask(('[#23 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Part-2'].vertices[16], point2=
    mdb.models['Model-1'].parts['Part-2'].vertices[23], point3=
    mdb.models['Model-1'].parts['Part-2'].vertices[25])
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['Part-1'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Part-1'].vertices[5], point2=
    mdb.models['Model-1'].parts['Part-1'].vertices[7], point3=
    mdb.models['Model-1'].parts['Part-1'].vertices[4])
mdb.models['Model-1'].parts['Part-1'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#2 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Part-1'].vertices[17], point2=
    mdb.models['Model-1'].parts['Part-1'].vertices[16], point3=
    mdb.models['Model-1'].parts['Part-1'].vertices[15])
mdb.models['Model-1'].parts['Part-1'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#8 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Part-1'].vertices[11], point2=
    mdb.models['Model-1'].parts['Part-1'].vertices[14], point3=
    mdb.models['Model-1'].parts['Part-1'].vertices[7])
#* Feature creation failed.
mdb.models['Model-1'].parts['Part-1'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#d ]', 
    ), ), point1=mdb.models['Model-1'].parts['Part-1'].vertices[11], point2=
    mdb.models['Model-1'].parts['Part-1'].vertices[14], point3=
    mdb.models['Model-1'].parts['Part-1'].vertices[7])
mdb.models['Model-1'].parts['Part-1'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#1a ]', 
    ), ), point1=mdb.models['Model-1'].parts['Part-1'].vertices[23], point2=
    mdb.models['Model-1'].parts['Part-1'].vertices[14], point3=
    mdb.models['Model-1'].parts['Part-1'].vertices[18])
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges.getSequenceFromMask(
    mask=('[#9ffeffff #ffffffff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].edges.getSequenceFromMask(
    mask=('[#ffffffff:2 #ff ]', ), ), size=0.38)
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges.getSequenceFromMask(
    mask=('[#9ffeffff #ffffffff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].edges.getSequenceFromMask(
    mask=('[#ffffffff:2 #ff ]', ), ), size=0.2)
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1']), size=0.2)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1']))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    mask=('[#ff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    mask=('[#1ff ]', ), ))
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges.getSequenceFromMask(
    mask=('[#ffffffff #f95faffe ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].edges.getSequenceFromMask(
    mask=('[#fffdbfff #ffffffff #bf ]', ), ), size=0.1)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1']))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
del mdb.models['Model-1'].boundaryConditions['BC-2']
del mdb.models['Model-1'].boundaryConditions['BC-1']
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges.getSequenceFromMask(
    ('[#0 #400 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    mask=('[#a2028048 #3504 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    mask=('[#14841484 #d4 ]', ), ), name='Set-6')
mdb.models['Model-1'].YasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-6'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#4290a80 #801 ]', ), ), name='Set-7')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-7'])
del mdb.jobs['Job-1']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
del mdb.models['Model-1'].interactions['Int-1']
del mdb.models['Model-1'].rootAssembly.features['Part-1-1']
del mdb.models['Model-1'].rootAssembly.features['Part-2-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-2-1', 
    part=mdb.models['Model-1'].parts['Part-2'])
mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].translate(vector=(8.8, 
    0.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-1', ), 
    vector=(8.8, 3.75, 0.0))
del mdb.models['Model-1'].rootAssembly.features['Part-1-1']
del mdb.models['Model-1'].rootAssembly.features['Part-2-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-2-1', 
    part=mdb.models['Model-1'].parts['Part-2'])
mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].translate(vector=(8.8, 
    0.0, 0.0))
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-6', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#18140030 #202 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-6', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#8602850 #20 ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    clearanceRegion=None, createStepName='Step-1', datumAxis=None, 
    initialClearance=OMIT, interactionProperty='IntProp-1', master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-6'], name='Int-1', 
    slave=mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-6'], sliding=
    FINITE, thickness=ON)
del mdb.models['Model-1'].constraints['Constraint-1']
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-8', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#18140030 #202 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-8', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#8602850 #20 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-8'], name=
    'Constraint-1', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-8'], thickness=ON, 
    tieRotations=ON)
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-1', ), 
    vector=(8.8, 3.75, 0.0))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'], ), size=0.38)
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ), size=0.33)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1']))
del mdb.jobs['Job-1']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
del mdb.models['Model-1'].boundaryConditions['BC-1']
del mdb.models['Model-1'].boundaryConditions['BC-2']
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].edges.getSequenceFromMask(
    ('[#0 #40000 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#4290a80 #801 ]', ), ), name='Set-8')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-8'])
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges.getSequenceFromMask(
    ('[#20000000 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    mask=('[#a2028048 #3504 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    mask=('[#14841484 #d4 ]', ), ), name='Set-9')
mdb.models['Model-1'].YasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-9'])
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-2', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
del mdb.models['Model-1'].loads['Load-1']
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-10', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#0 #80 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=15070556.0, name='Load-1', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['Surf-10'])
del mdb.jobs['Job-2']
del mdb.jobs['Job-1']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*MOHR COULOMB REQUIRES THE USE OF *ELASTIC,TYPE=ISO', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*MOHR COULOMB REQUIRES THE USE OF *ELASTIC,TYPE=ISO', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '88 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '100 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-8-ASSEMBLY_M_SURF-8), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '6024 elements have been defined with zero hour glass stiffness. You may use *hourglass stiffness or change the element type. The elements have been identified in element set ErrElemZeroHourGlassStiffness.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '6024 elements are missing elastic property reference. The elements have been identified in element set ErrElemMissingElasticPropRef.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '100 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    mask=('[#ff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    mask=('[#1ff ]', ), ), ))
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    mask=('[#ff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    mask=('[#1ff ]', ), ), ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-2', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-2'].submit(consistencyChecking=OFF, datacheckJob=True)
del mdb.jobs['Job-1']
mdb.jobs['Job-2']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*MOHR COULOMB REQUIRES THE USE OF *ELASTIC,TYPE=ISO', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*MOHR COULOMB REQUIRES THE USE OF *ELASTIC,TYPE=ISO', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '176 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '200 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-8-ASSEMBLY_M_SURF-8), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '6024 elements are missing elastic property reference. The elements have been identified in element set ErrElemMissingElasticPropRef.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '200 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-2.odb', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-2'})
del mdb.jobs['Job-2']
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1']))
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    mask=('[#ff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    mask=('[#1ff ]', ), ), ))
del mdb.models['Model-1'].steps['Step-1']
mdb.models['Model-1'].GeostaticStep(name='Step-1', previous='Initial')
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'E', 'S', 'U'))
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-11', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#0 #80 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=15070556.0, name='Load-1', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['Surf-11'])
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].edges.getSequenceFromMask(
    ('[#0 #840000 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#4290a80 #801 ]', ), ), name='Set-13')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-13'])
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].edges.getSequenceFromMask(
    ('[#20000 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    mask=('[#a2028048 #3504 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    mask=('[#14841484 #d4 ]', ), ), name='Set-14')
mdb.models['Model-1'].YasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-14'])
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*MOHR COULOMB REQUIRES THE USE OF *ELASTIC,TYPE=ISO', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*MOHR COULOMB REQUIRES THE USE OF *ELASTIC,TYPE=ISO', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '88 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '100 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-8-ASSEMBLY_M_SURF-8), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '6024 elements have been defined with zero hour glass stiffness. You may use *hourglass stiffness or change the element type. The elements have been identified in element set ErrElemZeroHourGlassStiffness.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '6024 elements are missing elastic property reference. The elements have been identified in element set ErrElemMissingElasticPropRef.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '100 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
del mdb.models['Model-1'].interactionProperties['IntProp-1']
del mdb.models['Model-1'].rootAssembly.features['Part-1-1']
del mdb.models['Model-1'].rootAssembly.features['Part-2-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-2-1', 
    part=mdb.models['Model-1'].parts['Part-2'])
mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].translate(vector=(8.8, 
    0.0, 0.0))
mdb.models['Model-1'].ContactProperty('IntProp-1')
mdb.models['Model-1'].interactionProperties['IntProp-1'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.48, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-12', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#18140030 #202 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-12', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#8602850 #20 ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    clearanceRegion=None, createStepName='Step-1', datumAxis=None, 
    initialClearance=OMIT, interactionProperty='IntProp-1', master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-12'], name='Int-1', 
    slave=mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-12'], sliding=
    FINITE, thickness=ON)
del mdb.models['Model-1'].constraints['Constraint-1']
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-14', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#18140030 #202 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-14', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#8602850 #20 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-14'], name=
    'Constraint-1', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-14'], thickness=ON, 
    tieRotations=ON)
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-1', ), 
    vector=(8.8, 3.75, 0.0))
del mdb.models['Model-1'].loads['Load-1']
del mdb.models['Model-1'].boundaryConditions['BC-2']
del mdb.models['Model-1'].boundaryConditions['BC-1']
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-16', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#0 #80 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=15070556.0, name='Load-1', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['Surf-16'])
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].edges.getSequenceFromMask(
    ('[#100 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#4290a80 #801 ]', ), ), name='Set-15')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-15'])
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].edges.getSequenceFromMask(
    ('[#0 #200000 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    mask=('[#a2028048 #3504 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    mask=('[#14841484 #d4 ]', ), ), name='Set-16')
mdb.models['Model-1'].YasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-16'])
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'], ), size=0.38)
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ), size=0.33)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1']))
del mdb.jobs['Job-1']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*MOHR COULOMB REQUIRES THE USE OF *ELASTIC,TYPE=ISO', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*MOHR COULOMB REQUIRES THE USE OF *ELASTIC,TYPE=ISO', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '88 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '100 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-14-ASSEMBLY_M_SURF-14), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '6024 elements have been defined with zero hour glass stiffness. You may use *hourglass stiffness or change the element type. The elements have been identified in element set ErrElemZeroHourGlassStiffness.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '6024 elements are missing elastic property reference. The elements have been identified in element set ErrElemMissingElasticPropRef.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '100 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
# Save by MAJID on 2024_11_16-22.42.29; build 2018 2017_11_07-22.51.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].materials['Material-1'].Elastic(table=((50000.0, 0.2), ))
mdb.models['Model-1'].materials['Material-1'].elastic.setValues(table=((
    200000000.0, 0.2), ))
mdb.models['Model-1'].materials['Material-2'].Elastic(table=((19900000000.0, 
    0.18), ))
del mdb.models['Model-1'].steps['Step-1']
mdb.models['Model-1'].StaticStep(initialInc=0.01, name='Step-1', previous=
    'Initial')
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'E', 'S', 'U'))
mdb.models['Model-1'].rootAssembly.deleteFeatures(('Part-1-1', 'Part-2-1'))
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-2-1', 
    part=mdb.models['Model-1'].parts['Part-2'])
mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].translate(vector=(8.8, 
    0.0, 0.0))
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-17', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#18140030 #202 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-17', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#8602850 #20 ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    clearanceRegion=None, createStepName='Step-1', datumAxis=None, 
    initialClearance=OMIT, interactionProperty='IntProp-1', master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-17'], name='Int-1', 
    slave=mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-17'], sliding=
    FINITE, thickness=ON)
del mdb.models['Model-1'].constraints['Constraint-1']
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-19', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#18140030 #202 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-19', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#8602850 #20 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-19'], name=
    'Constraint-1', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-19'], thickness=ON, 
    tieRotations=ON)
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-1', ), 
    vector=(8.8, 3.75, 0.0))
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-21', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#0 #80 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=15070556.0, name='Load-1', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['Surf-21'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#4290a80 #801 ]', ), ), name='Set-17')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-17'])
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges.getSequenceFromMask(
    ('[#0 #800000 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    mask=('[#14841484 #d4 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    mask=('[#a2028048 #3504 ]', ), ), name='Set-18')
mdb.models['Model-1'].YasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-18'])
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'], ), size=0.38)
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ), size=0.33)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1']))
del mdb.jobs['Job-1']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '88 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '100 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-19-ASSEMBLY_M_SURF-19), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '100 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 12040, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 380.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 12169.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 76.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Sat Nov 16 22:53:57 2024', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '88 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '100 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-19-ASSEMBLY_M_SURF-19), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '100 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 10312, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 335.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 12169.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 44.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE PLASTICITY/CREEP/CONNECTOR FRICTION ALGORITHM DID NOT CONVERGE AT 8 POINTS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 3, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0025, 'attempts': 2, 
    'timeIncrement': 0.0025, 'increment': 1, 'stepTime': 0.0025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 3, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0025, 'attempts': ' 1U', 
    'timeIncrement': 0.0025, 'increment': 2, 'stepTime': 0.0025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 7, 'iterations': 7, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.003125, 'attempts': 2, 
    'timeIncrement': 0.000625, 'increment': 2, 'stepTime': 0.003125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0040625, 'attempts': 1, 
    'timeIncrement': 0.0009375, 'increment': 3, 'stepTime': 0.0040625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 2, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0040625, 'attempts': ' 1U', 
    'timeIncrement': 0.00140625, 'increment': 4, 'stepTime': 0.0040625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 2, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0044140625, 'attempts': 2, 
    'timeIncrement': 0.0003515625, 'increment': 4, 'stepTime': 0.0044140625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00494140625, 'attempts': 1, 
    'timeIncrement': 0.00052734375, 'increment': 5, 'stepTime': 0.00494140625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 1, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    mask=('[#ff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    mask=('[#1ff ]', ), ))
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges.getSequenceFromMask(
    mask=('[#ffffffff:2 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].edges.getSequenceFromMask(
    mask=('[#ffffffff:2 #ff ]', ), ), minSizeFactor=0.1, size=0.2)
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.005732421875, 'attempts': 1, 
    'timeIncrement': 0.000791015625, 'increment': 6, 
    'stepTime': 0.005732421875, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1']), size=0.2)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1']))
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0069189453125, 
    'attempts': 1, 'timeIncrement': 0.0011865234375, 'increment': 7, 
    'stepTime': 0.0069189453125, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00869873046875, 
    'attempts': 1, 'timeIncrement': 0.00177978515625, 'increment': 8, 
    'stepTime': 0.00869873046875, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-2', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00869873046875, 
    'attempts': ' 1U', 'timeIncrement': 0.002669677734375, 'increment': 9, 
    'stepTime': 0.00869873046875, 'step': 1, 'jobName': 'Job-1', 'severe': 9, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00936614990234375, 
    'attempts': 2, 'timeIncrement': 0.00066741943359375, 'increment': 9, 
    'stepTime': 0.00936614990234375, 'step': 1, 'jobName': 'Job-1', 
    'severe': 2, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00936614990234375, 
    'attempts': ' 1U', 'timeIncrement': 0.00100112915039063, 'increment': 10, 
    'stepTime': 0.00936614990234375, 'step': 1, 'jobName': 'Job-1', 
    'severe': 1, 'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00961643218994141, 
    'attempts': 2, 'timeIncrement': 0.000250282287597656, 'increment': 10, 
    'stepTime': 0.00961643218994141, 'step': 1, 'jobName': 'Job-1', 
    'severe': 1, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00999185562133789, 
    'attempts': 1, 'timeIncrement': 0.000375423431396484, 'increment': 11, 
    'stepTime': 0.00999185562133789, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0105549907684326, 
    'attempts': 1, 'timeIncrement': 0.000563135147094727, 'increment': 12, 
    'stepTime': 0.0105549907684326, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0113996934890747, 
    'attempts': 1, 'timeIncrement': 0.00084470272064209, 'increment': 13, 
    'stepTime': 0.0113996934890747, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0113996934890747, 
    'attempts': ' 1U', 'timeIncrement': 0.00126705408096313, 'increment': 14, 
    'stepTime': 0.0113996934890747, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0117164570093155, 
    'attempts': 2, 'timeIncrement': 0.000316763520240784, 'increment': 14, 
    'stepTime': 0.0117164570093155, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0121916022896767, 
    'attempts': 1, 'timeIncrement': 0.000475145280361176, 'increment': 15, 
    'stepTime': 0.0121916022896767, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0129043202102184, 
    'attempts': 1, 'timeIncrement': 0.000712717920541763, 'increment': 16, 
    'stepTime': 0.0129043202102184, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0129043202102184, 
    'attempts': ' 1U', 'timeIncrement': 0.00106907688081265, 'increment': 17, 
    'stepTime': 0.0129043202102184, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0131715894304216, 
    'attempts': 2, 'timeIncrement': 0.000267269220203161, 'increment': 17, 
    'stepTime': 0.0131715894304216, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0131715894304216, 
    'attempts': ' 1U', 'timeIncrement': 0.000400903830304742, 'increment': 18, 
    'stepTime': 0.0131715894304216, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0132718153879978, 
    'attempts': 2, 'timeIncrement': 0.000100225957576185, 'increment': 18, 
    'stepTime': 0.0132718153879978, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0134221543243621, 
    'attempts': 1, 'timeIncrement': 0.000150338936364278, 'increment': 19, 
    'stepTime': 0.0134221543243621, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0134221543243621, 
    'attempts': ' 1U', 'timeIncrement': 0.000225508404546417, 'increment': 20, 
    'stepTime': 0.0134221543243621, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0134785314254987, 
    'attempts': 2, 'timeIncrement': 5.63771011366043e-05, 'increment': 20, 
    'stepTime': 0.0134785314254987, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.models['Model-1'].steps['Step-1'].setValues(maxNumInc=1000)
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0135630970772036, 
    'attempts': 1, 'timeIncrement': 8.45656517049065e-05, 'increment': 21, 
    'stepTime': 0.0135630970772036, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0136899455547609, 
    'attempts': 1, 'timeIncrement': 0.00012684847755736, 'increment': 22, 
    'stepTime': 0.0136899455547609, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-3', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.013880218271097, 
    'attempts': 1, 'timeIncrement': 0.00019027271633604, 'increment': 23, 
    'stepTime': 0.013880218271097, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.014165627345601, 
    'attempts': 1, 'timeIncrement': 0.000285409074504059, 'increment': 24, 
    'stepTime': 0.014165627345601, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 25, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0145937409573571, 
    'attempts': 1, 'timeIncrement': 0.000428113611756089, 'increment': 25, 
    'stepTime': 0.0145937409573571, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 26, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0152359113749912, 
    'attempts': 1, 'timeIncrement': 0.000642170417634134, 'increment': 26, 
    'stepTime': 0.0152359113749912, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-1'})
del mdb.jobs['Job-1']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-4', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
del mdb.jobs['Job-3']
mdb.jobs['Job-4'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-4']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 0, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-19-ASSEMBLY_M_SURF-19), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-4.odb', 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 6856, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-4', 'memory': 2943.0})
mdb.jobs['Job-4']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 12169.0, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(MINIMUM_MEMORY, {'minimum_memory': 364.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(JOB_COMPLETED, {'time': 'Sat Nov 16 23:04:22 2024', 
    'jobName': 'Job-4'})
mdb.jobs['Job-4'].submit(consistencyChecking=OFF)
mdb.jobs['Job-4']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 0, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-19-ASSEMBLY_M_SURF-19), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-4.odb', 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 7296, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-4', 'memory': 2549.0})
mdb.jobs['Job-4']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 12169.0, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(MINIMUM_MEMORY, {'minimum_memory': 260.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE PLASTICITY/CREEP/CONNECTOR FRICTION ALGORITHM DID NOT CONVERGE AT 16 POINTS', 
    'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-4', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.0025, 'attempts': 2, 
    'timeIncrement': 0.0025, 'increment': 1, 'stepTime': 0.0025, 'step': 1, 
    'jobName': 'Job-4', 'severe': 6, 'iterations': 6, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.0025, 'attempts': ' 1U', 
    'timeIncrement': 0.0025, 'increment': 2, 'stepTime': 0.0025, 'step': 1, 
    'jobName': 'Job-4', 'severe': 5, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.003125, 'attempts': 2, 
    'timeIncrement': 0.000625, 'increment': 2, 'stepTime': 0.003125, 'step': 1, 
    'jobName': 'Job-4', 'severe': 5, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.003125, 'attempts': ' 1U', 
    'timeIncrement': 0.0009375, 'increment': 3, 'stepTime': 0.003125, 
    'step': 1, 'jobName': 'Job-4', 'severe': 8, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.003359375, 'attempts': 2, 
    'timeIncrement': 0.000234375, 'increment': 3, 'stepTime': 0.003359375, 
    'step': 1, 'jobName': 'Job-4', 'severe': 4, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.0037109375, 'attempts': 1, 
    'timeIncrement': 0.0003515625, 'increment': 4, 'stepTime': 0.0037109375, 
    'step': 1, 'jobName': 'Job-4', 'severe': 3, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.0037109375, 
    'attempts': ' 1U', 'timeIncrement': 0.00052734375, 'increment': 5, 
    'stepTime': 0.0037109375, 'step': 1, 'jobName': 'Job-4', 'severe': 14, 
    'iterations': 14, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.0038427734375, 
    'attempts': 2, 'timeIncrement': 0.0001318359375, 'increment': 5, 
    'stepTime': 0.0038427734375, 'step': 1, 'jobName': 'Job-4', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00404052734375, 
    'attempts': 1, 'timeIncrement': 0.00019775390625, 'increment': 6, 
    'stepTime': 0.00404052734375, 'step': 1, 'jobName': 'Job-4', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.004337158203125, 
    'attempts': 1, 'timeIncrement': 0.000296630859375, 'increment': 7, 
    'stepTime': 0.004337158203125, 'step': 1, 'jobName': 'Job-4', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.004337158203125, 
    'attempts': ' 1U', 'timeIncrement': 0.0004449462890625, 'increment': 8, 
    'stepTime': 0.004337158203125, 'step': 1, 'jobName': 'Job-4', 'severe': 13, 
    'iterations': 13, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00444839477539063, 
    'attempts': 2, 'timeIncrement': 0.000111236572265625, 'increment': 8, 
    'stepTime': 0.00444839477539063, 'step': 1, 'jobName': 'Job-4', 
    'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00461524963378906, 
    'attempts': 1, 'timeIncrement': 0.000166854858398438, 'increment': 9, 
    'stepTime': 0.00461524963378906, 'step': 1, 'jobName': 'Job-4', 
    'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00486553192138672, 
    'attempts': 1, 'timeIncrement': 0.000250282287597656, 'increment': 10, 
    'stepTime': 0.00486553192138672, 'step': 1, 'jobName': 'Job-4', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.0052409553527832, 
    'attempts': 1, 'timeIncrement': 0.000375423431396484, 'increment': 11, 
    'stepTime': 0.0052409553527832, 'step': 1, 'jobName': 'Job-4', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.0052409553527832, 
    'attempts': ' 1U', 'timeIncrement': 0.000563135147094727, 'increment': 12, 
    'stepTime': 0.0052409553527832, 'step': 1, 'jobName': 'Job-4', 'severe': 6, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.0052409553527832, 
    'attempts': ' 2U', 'timeIncrement': 0.000140783786773682, 'increment': 12, 
    'stepTime': 0.0052409553527832, 'step': 1, 'jobName': 'Job-4', 'severe': 4, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00527615129947662, 
    'attempts': 3, 'timeIncrement': 3.51959466934204e-05, 'increment': 12, 
    'stepTime': 0.00527615129947662, 'step': 1, 'jobName': 'Job-4', 
    'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00532894521951676, 
    'attempts': 1, 'timeIncrement': 5.27939200401306e-05, 'increment': 13, 
    'stepTime': 0.00532894521951676, 'step': 1, 'jobName': 'Job-4', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00540813609957695, 
    'attempts': 1, 'timeIncrement': 7.91908800601959e-05, 'increment': 14, 
    'stepTime': 0.00540813609957695, 'step': 1, 'jobName': 'Job-4', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00552692241966724, 
    'attempts': 1, 'timeIncrement': 0.000118786320090294, 'increment': 15, 
    'stepTime': 0.00552692241966724, 'step': 1, 'jobName': 'Job-4', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00552692241966724, 
    'attempts': ' 1U', 'timeIncrement': 0.000178179480135441, 'increment': 16, 
    'stepTime': 0.00552692241966724, 'step': 1, 'jobName': 'Job-4', 
    'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00557146728970111, 
    'attempts': 2, 'timeIncrement': 4.45448700338602e-05, 'increment': 16, 
    'stepTime': 0.00557146728970111, 'step': 1, 'jobName': 'Job-4', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.0056382845947519, 
    'attempts': 1, 'timeIncrement': 6.68173050507903e-05, 'increment': 17, 
    'stepTime': 0.0056382845947519, 'step': 1, 'jobName': 'Job-4', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00573851055232808, 
    'attempts': 1, 'timeIncrement': 0.000100225957576185, 'increment': 18, 
    'stepTime': 0.00573851055232808, 'step': 1, 'jobName': 'Job-4', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00588884948869236, 
    'attempts': 1, 'timeIncrement': 0.000150338936364278, 'increment': 19, 
    'stepTime': 0.00588884948869236, 'step': 1, 'jobName': 'Job-4', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00611435789323878, 
    'attempts': 1, 'timeIncrement': 0.000225508404546417, 'increment': 20, 
    'stepTime': 0.00611435789323878, 'step': 1, 'jobName': 'Job-4', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.0064526205000584, 
    'attempts': 1, 'timeIncrement': 0.000338262606819626, 'increment': 21, 
    'stepTime': 0.0064526205000584, 'step': 1, 'jobName': 'Job-4', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.0064526205000584, 
    'attempts': ' 1U', 'timeIncrement': 0.000507393910229439, 'increment': 22, 
    'stepTime': 0.0064526205000584, 'step': 1, 'jobName': 'Job-4', 'severe': 8, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00657946897761576, 
    'attempts': 2, 'timeIncrement': 0.00012684847755736, 'increment': 22, 
    'stepTime': 0.00657946897761576, 'step': 1, 'jobName': 'Job-4', 
    'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.0067697416939518, 
    'attempts': 1, 'timeIncrement': 0.00019027271633604, 'increment': 23, 
    'stepTime': 0.0067697416939518, 'step': 1, 'jobName': 'Job-4', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00705515076845586, 
    'attempts': 1, 'timeIncrement': 0.000285409074504059, 'increment': 24, 
    'stepTime': 0.00705515076845586, 'step': 1, 'jobName': 'Job-4', 
    'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(STATUS, {'totalTime': 0.00705515076845586, 
    'attempts': ' 1U', 'timeIncrement': 0.000428113611756089, 'increment': 25, 
    'stepTime': 0.00705515076845586, 'step': 1, 'jobName': 'Job-4', 
    'severe': 6, 'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-4']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-4'})
mdb.jobs['Job-4']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-4'})
# Save by MAJID on 2024_11_17-01.22.44; build 2018 2017_11_07-22.51.41 127140
# Save by MAJID on 2024_11_17-01.30.30; build 2018 2017_11_07-22.51.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].steps['Step-1'].setValues(initialInc=0.1)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-3', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
del mdb.jobs['Job-3']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-3', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-3'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-3']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 0, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-19-ASSEMBLY_M_SURF-19), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-3.odb', 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 13532, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-3', 'memory': 2943.0})
mdb.jobs['Job-3']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 12169.0, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(MINIMUM_MEMORY, {'minimum_memory': 364.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(JOB_COMPLETED, {'time': 'Sun Nov 17 01:31:29 2024', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3'].submit(consistencyChecking=OFF)
mdb.jobs['Job-3']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 0, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-19-ASSEMBLY_M_SURF-19), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-3.odb', 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 11552, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-3', 'memory': 2549.0})
mdb.jobs['Job-3']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 12169.0, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(MINIMUM_MEMORY, {'minimum_memory': 260.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE PLASTICITY/CREEP/CONNECTOR FRICTION ALGORITHM DID NOT CONVERGE AT 40 POINTS', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-3', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-3']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE PLASTICITY/CREEP/CONNECTOR FRICTION ALGORITHM DID NOT CONVERGE AT 30 POINTS', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 2U', 
    'timeIncrement': 0.025, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-3', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-3']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE PLASTICITY/CREEP/CONNECTOR FRICTION ALGORITHM DID NOT CONVERGE AT 15 POINTS', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 3U', 
    'timeIncrement': 0.00625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-3', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.0015625, 'attempts': 4, 
    'timeIncrement': 0.0015625, 'increment': 1, 'stepTime': 0.0015625, 
    'step': 1, 'jobName': 'Job-3', 'severe': 5, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE PLASTICITY/CREEP/CONNECTOR FRICTION ALGORITHM DID NOT CONVERGE AT 8 POINTS', 
    'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.0015625, 'attempts': ' 1U', 
    'timeIncrement': 0.0015625, 'increment': 2, 'stepTime': 0.0015625, 
    'step': 1, 'jobName': 'Job-3', 'severe': 1, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.001953125, 'attempts': 2, 
    'timeIncrement': 0.000390625, 'increment': 2, 'stepTime': 0.001953125, 
    'step': 1, 'jobName': 'Job-3', 'severe': 4, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.0025390625, 'attempts': 1, 
    'timeIncrement': 0.0005859375, 'increment': 3, 'stepTime': 0.0025390625, 
    'step': 1, 'jobName': 'Job-3', 'severe': 4, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00341796875, 'attempts': 1, 
    'timeIncrement': 0.00087890625, 'increment': 4, 'stepTime': 0.00341796875, 
    'step': 1, 'jobName': 'Job-3', 'severe': 5, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00341796875, 
    'attempts': ' 1U', 'timeIncrement': 0.001318359375, 'increment': 5, 
    'stepTime': 0.00341796875, 'step': 1, 'jobName': 'Job-3', 'severe': 13, 
    'iterations': 13, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00374755859375, 
    'attempts': 2, 'timeIncrement': 0.00032958984375, 'increment': 5, 
    'stepTime': 0.00374755859375, 'step': 1, 'jobName': 'Job-3', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.004241943359375, 
    'attempts': 1, 'timeIncrement': 0.000494384765625, 'increment': 6, 
    'stepTime': 0.004241943359375, 'step': 1, 'jobName': 'Job-3', 'severe': 4, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
# Save by MAJID on 2024_11_17-01.55.14; build 2018 2017_11_07-22.51.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.004241943359375, 
    'attempts': ' 1U', 'timeIncrement': 0.0007415771484375, 'increment': 7, 
    'stepTime': 0.004241943359375, 'step': 1, 'jobName': 'Job-3', 'severe': 16, 
    'iterations': 16, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00442733764648437, 
    'attempts': 2, 'timeIncrement': 0.000185394287109375, 'increment': 7, 
    'stepTime': 0.00442733764648437, 'step': 1, 'jobName': 'Job-3', 
    'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00470542907714844, 
    'attempts': 1, 'timeIncrement': 0.000278091430664063, 'increment': 8, 
    'stepTime': 0.00470542907714844, 'step': 1, 'jobName': 'Job-3', 
    'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00470542907714844, 
    'attempts': ' 1U', 'timeIncrement': 0.000417137145996094, 'increment': 9, 
    'stepTime': 0.00470542907714844, 'step': 1, 'jobName': 'Job-3', 
    'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00480971336364746, 
    'attempts': 2, 'timeIncrement': 0.000104284286499023, 'increment': 9, 
    'stepTime': 0.00480971336364746, 'step': 1, 'jobName': 'Job-3', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.004966139793396, 
    'attempts': 1, 'timeIncrement': 0.000156426429748535, 'increment': 10, 
    'stepTime': 0.004966139793396, 'step': 1, 'jobName': 'Job-3', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.004966139793396, 
    'attempts': ' 1U', 'timeIncrement': 0.000234639644622803, 'increment': 11, 
    'stepTime': 0.004966139793396, 'step': 1, 'jobName': 'Job-3', 'severe': 4, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.0050247997045517, 
    'attempts': 2, 'timeIncrement': 5.86599111557007e-05, 'increment': 11, 
    'stepTime': 0.0050247997045517, 'step': 1, 'jobName': 'Job-3', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00511278957128525, 
    'attempts': 1, 'timeIncrement': 8.7989866733551e-05, 'increment': 12, 
    'stepTime': 0.00511278957128525, 'step': 1, 'jobName': 'Job-3', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00524477437138557, 
    'attempts': 1, 'timeIncrement': 0.000131984800100327, 'increment': 13, 
    'stepTime': 0.00524477437138557, 'step': 1, 'jobName': 'Job-3', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00524477437138557, 
    'attempts': ' 1U', 'timeIncrement': 0.00019797720015049, 'increment': 14, 
    'stepTime': 0.00524477437138557, 'step': 1, 'jobName': 'Job-3', 
    'severe': 5, 'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.0052942686714232, 
    'attempts': 2, 'timeIncrement': 4.94943000376225e-05, 'increment': 14, 
    'stepTime': 0.0052942686714232, 'step': 1, 'jobName': 'Job-3', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00536851012147963, 
    'attempts': 1, 'timeIncrement': 7.42414500564337e-05, 'increment': 15, 
    'stepTime': 0.00536851012147963, 'step': 1, 'jobName': 'Job-3', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00547987229656428, 
    'attempts': 1, 'timeIncrement': 0.000111362175084651, 'increment': 16, 
    'stepTime': 0.00547987229656428, 'step': 1, 'jobName': 'Job-3', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00547987229656428, 
    'attempts': ' 1U', 'timeIncrement': 0.000167043262626976, 'increment': 17, 
    'stepTime': 0.00547987229656428, 'step': 1, 'jobName': 'Job-3', 
    'severe': 15, 'iterations': 15, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00552163311222102, 
    'attempts': 2, 'timeIncrement': 4.17608156567439e-05, 'increment': 17, 
    'stepTime': 0.00552163311222102, 'step': 1, 'jobName': 'Job-3', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00558427433570614, 
    'attempts': 1, 'timeIncrement': 6.26412234851159e-05, 'increment': 18, 
    'stepTime': 0.00558427433570614, 'step': 1, 'jobName': 'Job-3', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00567823617093381, 
    'attempts': 1, 'timeIncrement': 9.39618352276739e-05, 'increment': 19, 
    'stepTime': 0.00567823617093381, 'step': 1, 'jobName': 'Job-3', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00581917892377532, 
    'attempts': 1, 'timeIncrement': 0.000140942752841511, 'increment': 20, 
    'stepTime': 0.00581917892377532, 'step': 1, 'jobName': 'Job-3', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00603059305303759, 
    'attempts': 1, 'timeIncrement': 0.000211414129262266, 'increment': 21, 
    'stepTime': 0.00603059305303759, 'step': 1, 'jobName': 'Job-3', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00634771424693099, 
    'attempts': 1, 'timeIncrement': 0.000317121193893399, 'increment': 22, 
    'stepTime': 0.00634771424693099, 'step': 1, 'jobName': 'Job-3', 
    'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00634771424693099, 
    'attempts': ' 1U', 'timeIncrement': 0.000475681790840099, 'increment': 23, 
    'stepTime': 0.00634771424693099, 'step': 1, 'jobName': 'Job-3', 
    'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00646663469464102, 
    'attempts': 2, 'timeIncrement': 0.000118920447710025, 'increment': 23, 
    'stepTime': 0.00646663469464102, 'step': 1, 'jobName': 'Job-3', 
    'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00664501536620605, 
    'attempts': 1, 'timeIncrement': 0.000178380671565037, 'increment': 24, 
    'stepTime': 0.00664501536620605, 'step': 1, 'jobName': 'Job-3', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00664501536620605, 
    'attempts': ' 1U', 'timeIncrement': 0.000267571007347556, 'increment': 25, 
    'stepTime': 0.00664501536620605, 'step': 1, 'jobName': 'Job-3', 
    'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 25, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00671190811804294, 
    'attempts': 2, 'timeIncrement': 6.68927518368889e-05, 'increment': 25, 
    'stepTime': 0.00671190811804294, 'step': 1, 'jobName': 'Job-3', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 26, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00681224724579827, 
    'attempts': 1, 'timeIncrement': 0.000100339127755333, 'increment': 26, 
    'stepTime': 0.00681224724579827, 'step': 1, 'jobName': 'Job-3', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00681224724579827, 
    'attempts': ' 1U', 'timeIncrement': 0.000150508691633, 'increment': 27, 
    'stepTime': 0.00681224724579827, 'step': 1, 'jobName': 'Job-3', 
    'severe': 33, 'iterations': 33, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 27, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00684987441870652, 
    'attempts': 2, 'timeIncrement': 3.762717290825e-05, 'increment': 27, 
    'stepTime': 0.00684987441870652, 'step': 1, 'jobName': 'Job-3', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 28, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.0069063151780689, 
    'attempts': 1, 'timeIncrement': 5.6440759362375e-05, 'increment': 28, 
    'stepTime': 0.0069063151780689, 'step': 1, 'jobName': 'Job-3', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-3']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 29, 'jobName': 'Job-3'})
mdb.jobs['Job-3']._Message(STATUS, {'totalTime': 0.00699097631711246, 
    'attempts': 1, 'timeIncrement': 8.46611390435625e-05, 'increment': 29, 
    'stepTime': 0.00699097631711246, 'step': 1, 'jobName': 'Job-3', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
# Save by MAJID on 2024_11_17-03.08.53; build 2018 2017_11_07-22.51.41 127140
# Save by MAJID on 2024_11_17-10.08.37; build 2018 2017_11_07-22.51.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-5', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.models['Model-1'].steps['Step-1'].setValues(initialInc=1.0)
mdb.models['Model-1'].steps['Step-1'].setValues(initialInc=4.0, maxInc=4.0, 
    minInc=4e-05, timePeriod=4.0)
del mdb.jobs['Job-5']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-5', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-5'].submit(consistencyChecking=OFF)
mdb.jobs['Job-5']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 0, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-19-ASSEMBLY_M_SURF-19), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-5.odb', 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 1072, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-5', 'memory': 2549.0})
mdb.jobs['Job-5']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 12169.0, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(MINIMUM_MEMORY, {'minimum_memory': 260.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE PLASTICITY/CREEP/CONNECTOR FRICTION ALGORITHM DID NOT CONVERGE AT 3152 POINTS', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 4.0, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-5', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-5']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE PLASTICITY/CREEP/CONNECTOR FRICTION ALGORITHM DID NOT CONVERGE AT 291 POINTS', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 2U', 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-5', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-5']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE PLASTICITY/CREEP/CONNECTOR FRICTION ALGORITHM DID NOT CONVERGE AT 24 POINTS', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 3U', 
    'timeIncrement': 0.25, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-5', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-5']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE PLASTICITY/CREEP/CONNECTOR FRICTION ALGORITHM DID NOT CONVERGE AT 32 POINTS', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 4U', 
    'timeIncrement': 0.0625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-5', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-5']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE PLASTICITY/CREEP/CONNECTOR FRICTION ALGORITHM DID NOT CONVERGE AT 8 POINTS', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 5U', 
    'timeIncrement': 0.015625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-5', 'severe': 5, 'iterations': 6, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-5']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Too many attempts made for this increment', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-5'})
mdb.models['Model-1'].steps['Step-1'].setValues(initialInc=0.01, maxInc=1.0, 
    maxNumInc=100, minInc=1e-05, timePeriod=1.0)
del mdb.jobs['Job-5']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-5', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-5'].submit(consistencyChecking=OFF)
mdb.jobs['Job-5']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 0, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-19-ASSEMBLY_M_SURF-19), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '160 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-5.odb', 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 672, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-5', 'memory': 2549.0})
mdb.jobs['Job-5']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 12169.0, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(MINIMUM_MEMORY, {'minimum_memory': 260.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE PLASTICITY/CREEP/CONNECTOR FRICTION ALGORITHM DID NOT CONVERGE AT 16 POINTS', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-5', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0025, 'attempts': 2, 
    'timeIncrement': 0.0025, 'increment': 1, 'stepTime': 0.0025, 'step': 1, 
    'jobName': 'Job-5', 'severe': 6, 'iterations': 6, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0025, 'attempts': ' 1U', 
    'timeIncrement': 0.0025, 'increment': 2, 'stepTime': 0.0025, 'step': 1, 
    'jobName': 'Job-5', 'severe': 5, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.003125, 'attempts': 2, 
    'timeIncrement': 0.000625, 'increment': 2, 'stepTime': 0.003125, 'step': 1, 
    'jobName': 'Job-5', 'severe': 5, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.003125, 'attempts': ' 1U', 
    'timeIncrement': 0.0009375, 'increment': 3, 'stepTime': 0.003125, 
    'step': 1, 'jobName': 'Job-5', 'severe': 8, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.003359375, 'attempts': 2, 
    'timeIncrement': 0.000234375, 'increment': 3, 'stepTime': 0.003359375, 
    'step': 1, 'jobName': 'Job-5', 'severe': 4, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0037109375, 'attempts': 1, 
    'timeIncrement': 0.0003515625, 'increment': 4, 'stepTime': 0.0037109375, 
    'step': 1, 'jobName': 'Job-5', 'severe': 3, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0037109375, 
    'attempts': ' 1U', 'timeIncrement': 0.00052734375, 'increment': 5, 
    'stepTime': 0.0037109375, 'step': 1, 'jobName': 'Job-5', 'severe': 14, 
    'iterations': 14, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0038427734375, 
    'attempts': 2, 'timeIncrement': 0.0001318359375, 'increment': 5, 
    'stepTime': 0.0038427734375, 'step': 1, 'jobName': 'Job-5', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00404052734375, 
    'attempts': 1, 'timeIncrement': 0.00019775390625, 'increment': 6, 
    'stepTime': 0.00404052734375, 'step': 1, 'jobName': 'Job-5', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.004337158203125, 
    'attempts': 1, 'timeIncrement': 0.000296630859375, 'increment': 7, 
    'stepTime': 0.004337158203125, 'step': 1, 'jobName': 'Job-5', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.004337158203125, 
    'attempts': ' 1U', 'timeIncrement': 0.0004449462890625, 'increment': 8, 
    'stepTime': 0.004337158203125, 'step': 1, 'jobName': 'Job-5', 'severe': 13, 
    'iterations': 13, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00444839477539063, 
    'attempts': 2, 'timeIncrement': 0.000111236572265625, 'increment': 8, 
    'stepTime': 0.00444839477539063, 'step': 1, 'jobName': 'Job-5', 
    'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00461524963378906, 
    'attempts': 1, 'timeIncrement': 0.000166854858398438, 'increment': 9, 
    'stepTime': 0.00461524963378906, 'step': 1, 'jobName': 'Job-5', 
    'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00486553192138672, 
    'attempts': 1, 'timeIncrement': 0.000250282287597656, 'increment': 10, 
    'stepTime': 0.00486553192138672, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0052409553527832, 
    'attempts': 1, 'timeIncrement': 0.000375423431396484, 'increment': 11, 
    'stepTime': 0.0052409553527832, 'step': 1, 'jobName': 'Job-5', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0052409553527832, 
    'attempts': ' 1U', 'timeIncrement': 0.000563135147094727, 'increment': 12, 
    'stepTime': 0.0052409553527832, 'step': 1, 'jobName': 'Job-5', 'severe': 6, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0052409553527832, 
    'attempts': ' 2U', 'timeIncrement': 0.000140783786773682, 'increment': 12, 
    'stepTime': 0.0052409553527832, 'step': 1, 'jobName': 'Job-5', 'severe': 4, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00527615129947662, 
    'attempts': 3, 'timeIncrement': 3.51959466934204e-05, 'increment': 12, 
    'stepTime': 0.00527615129947662, 'step': 1, 'jobName': 'Job-5', 
    'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00532894521951676, 
    'attempts': 1, 'timeIncrement': 5.27939200401306e-05, 'increment': 13, 
    'stepTime': 0.00532894521951676, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00540813609957695, 
    'attempts': 1, 'timeIncrement': 7.91908800601959e-05, 'increment': 14, 
    'stepTime': 0.00540813609957695, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00552692241966724, 
    'attempts': 1, 'timeIncrement': 0.000118786320090294, 'increment': 15, 
    'stepTime': 0.00552692241966724, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00552692241966724, 
    'attempts': ' 1U', 'timeIncrement': 0.000178179480135441, 'increment': 16, 
    'stepTime': 0.00552692241966724, 'step': 1, 'jobName': 'Job-5', 
    'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00557146728970111, 
    'attempts': 2, 'timeIncrement': 4.45448700338602e-05, 'increment': 16, 
    'stepTime': 0.00557146728970111, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0056382845947519, 
    'attempts': 1, 'timeIncrement': 6.68173050507903e-05, 'increment': 17, 
    'stepTime': 0.0056382845947519, 'step': 1, 'jobName': 'Job-5', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00573851055232808, 
    'attempts': 1, 'timeIncrement': 0.000100225957576185, 'increment': 18, 
    'stepTime': 0.00573851055232808, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00588884948869236, 
    'attempts': 1, 'timeIncrement': 0.000150338936364278, 'increment': 19, 
    'stepTime': 0.00588884948869236, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00611435789323878, 
    'attempts': 1, 'timeIncrement': 0.000225508404546417, 'increment': 20, 
    'stepTime': 0.00611435789323878, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0064526205000584, 
    'attempts': 1, 'timeIncrement': 0.000338262606819626, 'increment': 21, 
    'stepTime': 0.0064526205000584, 'step': 1, 'jobName': 'Job-5', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0064526205000584, 
    'attempts': ' 1U', 'timeIncrement': 0.000507393910229439, 'increment': 22, 
    'stepTime': 0.0064526205000584, 'step': 1, 'jobName': 'Job-5', 'severe': 8, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00657946897761576, 
    'attempts': 2, 'timeIncrement': 0.00012684847755736, 'increment': 22, 
    'stepTime': 0.00657946897761576, 'step': 1, 'jobName': 'Job-5', 
    'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0067697416939518, 
    'attempts': 1, 'timeIncrement': 0.00019027271633604, 'increment': 23, 
    'stepTime': 0.0067697416939518, 'step': 1, 'jobName': 'Job-5', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00705515076845586, 
    'attempts': 1, 'timeIncrement': 0.000285409074504059, 'increment': 24, 
    'stepTime': 0.00705515076845586, 'step': 1, 'jobName': 'Job-5', 
    'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00705515076845586, 
    'attempts': ' 1U', 'timeIncrement': 0.000428113611756089, 'increment': 25, 
    'stepTime': 0.00705515076845586, 'step': 1, 'jobName': 'Job-5', 
    'severe': 6, 'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 25, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00716217917139488, 
    'attempts': 2, 'timeIncrement': 0.000107028402939022, 'increment': 25, 
    'stepTime': 0.00716217917139488, 'step': 1, 'jobName': 'Job-5', 
    'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 26, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00732272177580342, 
    'attempts': 1, 'timeIncrement': 0.000160542604408533, 'increment': 26, 
    'stepTime': 0.00732272177580342, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00732272177580342, 
    'attempts': ' 1U', 'timeIncrement': 0.0002408139066128, 'increment': 27, 
    'stepTime': 0.00732272177580342, 'step': 1, 'jobName': 'Job-5', 
    'severe': 5, 'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 27, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00738292525245662, 
    'attempts': 2, 'timeIncrement': 6.02034766532e-05, 'increment': 27, 
    'stepTime': 0.00738292525245662, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 28, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00747323046743642, 
    'attempts': 1, 'timeIncrement': 9.03052149798001e-05, 'increment': 28, 
    'stepTime': 0.00747323046743642, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00747323046743642, 
    'attempts': ' 1U', 'timeIncrement': 0.0001354578224697, 'increment': 29, 
    'stepTime': 0.00747323046743642, 'step': 1, 'jobName': 'Job-5', 
    'severe': 5, 'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 29, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00750709492305384, 
    'attempts': 2, 'timeIncrement': 3.3864455617425e-05, 'increment': 29, 
    'stepTime': 0.00750709492305384, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 30, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00755789160647998, 
    'attempts': 1, 'timeIncrement': 5.07966834261375e-05, 'increment': 30, 
    'stepTime': 0.00755789160647998, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 31, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00763408663161919, 
    'attempts': 1, 'timeIncrement': 7.61950251392063e-05, 'increment': 31, 
    'stepTime': 0.00763408663161919, 'step': 1, 'jobName': 'Job-5', 
    'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 32, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.007748379169328, 
    'attempts': 1, 'timeIncrement': 0.000114292537708809, 'increment': 32, 
    'stepTime': 0.007748379169328, 'step': 1, 'jobName': 'Job-5', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 33, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00791981797589121, 
    'attempts': 1, 'timeIncrement': 0.000171438806563214, 'increment': 33, 
    'stepTime': 0.00791981797589121, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00791981797589121, 
    'attempts': ' 1U', 'timeIncrement': 0.000257158209844821, 'increment': 34, 
    'stepTime': 0.00791981797589121, 'step': 1, 'jobName': 'Job-5', 
    'severe': 5, 'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 34, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00798410752835242, 
    'attempts': 2, 'timeIncrement': 6.42895524612053e-05, 'increment': 34, 
    'stepTime': 0.00798410752835242, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 35, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00808054185704422, 
    'attempts': 1, 'timeIncrement': 9.6434328691808e-05, 'increment': 35, 
    'stepTime': 0.00808054185704422, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00808054185704422, 
    'attempts': ' 1U', 'timeIncrement': 0.000144651493037712, 'increment': 36, 
    'stepTime': 0.00808054185704422, 'step': 1, 'jobName': 'Job-5', 
    'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 36, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00811670473030365, 
    'attempts': 2, 'timeIncrement': 3.6162873259428e-05, 'increment': 36, 
    'stepTime': 0.00811670473030365, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 37, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00817094904019279, 
    'attempts': 1, 'timeIncrement': 5.4244309889142e-05, 'increment': 37, 
    'stepTime': 0.00817094904019279, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 38, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00825231550502651, 
    'attempts': 1, 'timeIncrement': 8.1366464833713e-05, 'increment': 38, 
    'stepTime': 0.00825231550502651, 'step': 1, 'jobName': 'Job-5', 
    'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 39, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00837436520227708, 
    'attempts': 1, 'timeIncrement': 0.000122049697250569, 'increment': 39, 
    'stepTime': 0.00837436520227708, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 40, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00855743974815293, 
    'attempts': 1, 'timeIncrement': 0.000183074545875854, 'increment': 40, 
    'stepTime': 0.00855743974815293, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 41, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00883205156696671, 
    'attempts': 1, 'timeIncrement': 0.000274611818813781, 'increment': 41, 
    'stepTime': 0.00883205156696671, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 42, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00924396929518738, 
    'attempts': 1, 'timeIncrement': 0.000411917728220672, 'increment': 42, 
    'stepTime': 0.00924396929518738, 'step': 1, 'jobName': 'Job-5', 
    'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00924396929518738, 
    'attempts': ' 1U', 'timeIncrement': 0.000617876592331008, 'increment': 43, 
    'stepTime': 0.00924396929518738, 'step': 1, 'jobName': 'Job-5', 
    'severe': 5, 'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 43, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00939843844327014, 
    'attempts': 2, 'timeIncrement': 0.000154469148082752, 'increment': 43, 
    'stepTime': 0.00939843844327014, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00939843844327014, 
    'attempts': ' 1U', 'timeIncrement': 0.000231703722124128, 'increment': 44, 
    'stepTime': 0.00939843844327014, 'step': 1, 'jobName': 'Job-5', 
    'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 44, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00945636437380117, 
    'attempts': 2, 'timeIncrement': 5.7925930531032e-05, 'increment': 44, 
    'stepTime': 0.00945636437380117, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 45, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00954325326959772, 
    'attempts': 1, 'timeIncrement': 8.6888895796548e-05, 'increment': 45, 
    'stepTime': 0.00954325326959772, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 46, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00967358661329254, 
    'attempts': 1, 'timeIncrement': 0.000130333343694822, 'increment': 46, 
    'stepTime': 0.00967358661329254, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 47, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.00986908662883477, 
    'attempts': 1, 'timeIncrement': 0.000195500015542233, 'increment': 47, 
    'stepTime': 0.00986908662883477, 'step': 1, 'jobName': 'Job-5', 
    'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 48, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0101623366521481, 
    'attempts': 1, 'timeIncrement': 0.00029325002331335, 'increment': 48, 
    'stepTime': 0.0101623366521481, 'step': 1, 'jobName': 'Job-5', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0101623366521481, 
    'attempts': ' 1U', 'timeIncrement': 0.000439875034970024, 'increment': 49, 
    'stepTime': 0.0101623366521481, 'step': 1, 'jobName': 'Job-5', 'severe': 9, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0101623366521481, 
    'attempts': ' 2U', 'timeIncrement': 0.000109968758742506, 'increment': 49, 
    'stepTime': 0.0101623366521481, 'step': 1, 'jobName': 'Job-5', 'severe': 5, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 49, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0101898288418338, 
    'attempts': 3, 'timeIncrement': 2.74921896856265e-05, 'increment': 49, 
    'stepTime': 0.0101898288418338, 'step': 1, 'jobName': 'Job-5', 'severe': 5, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 50, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0102310671263622, 
    'attempts': 1, 'timeIncrement': 4.12382845284398e-05, 'increment': 50, 
    'stepTime': 0.0102310671263622, 'step': 1, 'jobName': 'Job-5', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 51, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0102929245531549, 
    'attempts': 1, 'timeIncrement': 6.18574267926597e-05, 'increment': 51, 
    'stepTime': 0.0102929245531549, 'step': 1, 'jobName': 'Job-5', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 52, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0103857106933438, 
    'attempts': 1, 'timeIncrement': 9.27861401889895e-05, 'increment': 52, 
    'stepTime': 0.0103857106933438, 'step': 1, 'jobName': 'Job-5', 'severe': 1, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 53, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0105248899036273, 
    'attempts': 1, 'timeIncrement': 0.000139179210283484, 'increment': 53, 
    'stepTime': 0.0105248899036273, 'step': 1, 'jobName': 'Job-5', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 54, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0107336587190526, 
    'attempts': 1, 'timeIncrement': 0.000208768815425226, 'increment': 54, 
    'stepTime': 0.0107336587190526, 'step': 1, 'jobName': 'Job-5', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 55, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0110468119421904, 
    'attempts': 1, 'timeIncrement': 0.00031315322313784, 'increment': 55, 
    'stepTime': 0.0110468119421904, 'step': 1, 'jobName': 'Job-5', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0110468119421904, 
    'attempts': ' 1U', 'timeIncrement': 0.000469729834706759, 'increment': 56, 
    'stepTime': 0.0110468119421904, 'step': 1, 'jobName': 'Job-5', 'severe': 8, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 56, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0111642444008671, 
    'attempts': 2, 'timeIncrement': 0.00011743245867669, 'increment': 56, 
    'stepTime': 0.0111642444008671, 'step': 1, 'jobName': 'Job-5', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0111642444008671, 
    'attempts': ' 1U', 'timeIncrement': 0.000176148688015035, 'increment': 57, 
    'stepTime': 0.0111642444008671, 'step': 1, 'jobName': 'Job-5', 
    'severe': 33, 'iterations': 33, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 57, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0112082815728708, 
    'attempts': 2, 'timeIncrement': 4.40371720037587e-05, 'increment': 57, 
    'stepTime': 0.0112082815728708, 'step': 1, 'jobName': 'Job-5', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 58, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0112743373308765, 
    'attempts': 1, 'timeIncrement': 6.6055758005638e-05, 'increment': 58, 
    'stepTime': 0.0112743373308765, 'step': 1, 'jobName': 'Job-5', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 59, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0113734209678849, 
    'attempts': 1, 'timeIncrement': 9.9083637008457e-05, 'increment': 59, 
    'stepTime': 0.0113734209678849, 'step': 1, 'jobName': 'Job-5', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 60, 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(STATUS, {'totalTime': 0.0115220464233976, 
    'attempts': 1, 'timeIncrement': 0.000148625455512686, 'increment': 60, 
    'stepTime': 0.0115220464233976, 'step': 1, 'jobName': 'Job-5', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-5']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-5'})
mdb.jobs['Job-5']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-5'})
# Save by MAJID on 2024_11_17-14.15.01; build 2018 2017_11_07-22.51.41 127140
# Save by MAJID on 2024_11_17-14.17.20; build 2018 2017_11_07-22.51.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1'].features['Cut extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1'].features['Cut extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-1'].deleteFeatures(('Cut extrude-1', 
    'Partition cell-4', 'Partition cell-3', 'Partition cell-2', 
    'Partition cell-1'))
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.56, name='__profile__', 
    sheetSize=22.67, transform=
    mdb.models['Model-1'].parts['Part-1'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Part-1'].faces[1], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['Part-1'].edges[1], 
    sketchOrientation=RIGHT, origin=(4.0, 0.75, 4.0)))
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(1.0, 1.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(1.0, -1.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(-1.0, 1.0))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-1.0, 1.0), 
    point2=(1.0, -1.0))
mdb.models['Model-1'].parts['Part-1'].CutExtrude(flipExtrudeDirection=OFF, 
    sketch=mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=
    RIGHT, sketchPlane=mdb.models['Model-1'].parts['Part-1'].faces[1], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['Model-1'].parts['Part-1'].edges[1])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['Part-2'].deleteFeatures(('Cut extrude-1', 
    'Partition cell-4', 'Partition cell-3', 'Partition cell-2', 
    'Partition cell-1'))
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.59, name='__profile__', 
    sheetSize=23.83, transform=
    mdb.models['Model-1'].parts['Part-2'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Part-2'].faces[1], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['Part-2'].edges[1], 
    sketchOrientation=RIGHT, origin=(4.0, 3.75, 4.0)))
mdb.models['Model-1'].parts['Part-2'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(1.0, 1.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(-1.0, -1.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(-1.0, 1.0))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-1.0, -1.0), 
    point2=(1.0, 1.0))
mdb.models['Model-1'].parts['Part-2'].CutExtrude(depth=0.5, 
    flipExtrudeDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=RIGHT, 
    sketchPlane=mdb.models['Model-1'].parts['Part-2'].faces[1], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['Model-1'].parts['Part-2'].edges[1])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].loads['Load-1'].setValues(magnitude=214715.0)
del mdb.models['Model-1'].loads['Load-1']
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-22', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#10 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=214715.0, name='Load-1', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['Surf-22'])
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[3], 
    point2=mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[5]
    , point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[3])
del mdb.models['Model-1'].rootAssembly.features['Partition cell-1']
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[3], 
    point2=mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[5]
    , point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[0])
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[17], 
    point2=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[16], 
    point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[16])
del mdb.models['Model-1'].rootAssembly.features['Partition cell-2']
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[17], 
    point2=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[16], 
    point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[16])
del mdb.models['Model-1'].rootAssembly.features['Partition cell-2']
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    ('[#3 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[17], 
    point2=mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[1]
    , point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[6])
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    ('[#2 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].edges[11], MIDDLE)
    , point2=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].edges[17], MIDDLE)
    , point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges[39], 
    MIDDLE))
del mdb.models['Model-1'].rootAssembly.features['Partition cell-3']
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    ('[#9 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[19], 
    point2=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[22], 
    point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[16])
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    ('[#2 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges[52], MIDDLE)
    , point2=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].edges[16], MIDDLE)
    , point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].edges[8], MIDDLE))
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    ('[#4 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[5], 
    point2=mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[4]
    , point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[8])
#* Feature creation failed.
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    ('[#4 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[26], 
    point2=mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[4]
    , point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[8])
#* Feature creation failed.
del mdb.models['Model-1'].rootAssembly.features['Partition cell-1']
del mdb.models['Model-1'].rootAssembly.features['Partition cell-4']
mdb.models['Model-1'].rootAssembly.deleteFeatures(('Partition cell-3', 
    'Partition cell-2'))
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[3], 
    point2=mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[2]
    , point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[0])
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[17], 
    point2=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[15], 
    point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[16])
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    mask=('[#7 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    mask=('[#7 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[0], 
    point2=mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[5]
    , point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[11])
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    mask=('[#31 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    mask=('[#23 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[14], 
    point2=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[25], 
    point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[24])
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1']))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-6', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.models['Model-1'].rootAssembly.deleteFeatures(('Part-1-1', 'Part-2-1', 
    'Partition cell-4', 'Partition cell-3', 'Partition cell-2', 
    'Partition cell-1', 'Partition cell-4', 'Partition cell-3', 
    'Partition cell-2', 'Partition cell-1'))
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-2-1', 
    part=mdb.models['Model-1'].parts['Part-2'])
mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].translate(vector=(8.8, 
    0.0, 0.0))
del mdb.models['Model-1'].interactions['Int-1']
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-23', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-23', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#80 ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    clearanceRegion=None, createStepName='Step-1', datumAxis=None, 
    initialClearance=OMIT, interactionProperty='IntProp-1', master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-23'], name='Int-1', 
    slave=mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-23'], sliding=
    FINITE, thickness=ON)
del mdb.models['Model-1'].constraints['Constraint-1']
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-25', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-25', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#80 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-25'], name=
    'Constraint-1', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-25'], thickness=ON, 
    tieRotations=ON)
del mdb.models['Model-1'].boundaryConditions['BC-1']
del mdb.models['Model-1'].boundaryConditions['BC-2']
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-1', ), 
    vector=(8.8, 3.75, 0.0))
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#100 ]', ), ), name='Set-20')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-20'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    mask=('[#6a0 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    mask=('[#350 ]', ), ), name='Set-21')
mdb.models['Model-1'].YasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-21'])
del mdb.models['Model-1'].loads['Load-1']
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-27', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#10 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=214715.0, name='Load-1', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['Surf-27'])
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[5], 
    point2=mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[4]
    , point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[7])
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[17], 
    point2=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[16], 
    point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[17])
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    mask=('[#7 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    mask=('[#7 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[12], 
    point2=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[16], 
    point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[1])
mdb.models['Model-1'].rootAssembly.PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    mask=('[#25 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].cells.getSequenceFromMask(
    mask=('[#23 ]', ), ), point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[14], 
    point2=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].vertices[18], 
    point3=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices[22])
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'], ), size=0.38)
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ), size=0.3)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1']))
del mdb.jobs['Job-6']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-6', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-6'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-6']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 0, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-6.odb', 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 2036, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-6', 'memory': 398.0})
mdb.jobs['Job-6']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 12169.0, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(MINIMUM_MEMORY, {'minimum_memory': 78.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(JOB_COMPLETED, {'time': 'Sun Nov 17 15:03:46 2024', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6'].submit(consistencyChecking=OFF)
mdb.jobs['Job-6']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 0, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-6.odb', 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-1TM4I2H', 'handle': 8852, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-6', 'memory': 329.0})
mdb.jobs['Job-6']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 12169.0, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(MINIMUM_MEMORY, {'minimum_memory': 45.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Job-6', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Job-6', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Job-6', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Job-6', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Job-6', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Job-6', 'severe': 2, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Job-6', 'severe': 3, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': ' 1U', 
    'timeIncrement': 0.11390625, 'increment': 8, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Job-6', 'severe': 2, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 6})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': ' 2U', 
    'timeIncrement': 0.0284765625, 'increment': 8, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Job-6', 'severe': 2, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.224931640625, 'attempts': 3, 
    'timeIncrement': 0.007119140625, 'increment': 8, 
    'stepTime': 0.224931640625, 'step': 1, 'jobName': 'Job-6', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.2356103515625, 
    'attempts': 1, 'timeIncrement': 0.0106787109375, 'increment': 9, 
    'stepTime': 0.2356103515625, 'step': 1, 'jobName': 'Job-6', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.25162841796875, 
    'attempts': 1, 'timeIncrement': 0.01601806640625, 'increment': 10, 
    'stepTime': 0.25162841796875, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.275655517578125, 
    'attempts': 1, 'timeIncrement': 0.024027099609375, 'increment': 11, 
    'stepTime': 0.275655517578125, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.311696166992187, 
    'attempts': 1, 'timeIncrement': 0.0360406494140625, 'increment': 12, 
    'stepTime': 0.311696166992187, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.365757141113281, 
    'attempts': 1, 'timeIncrement': 0.0540609741210938, 'increment': 13, 
    'stepTime': 0.365757141113281, 'step': 1, 'jobName': 'Job-6', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.446848602294922, 
    'attempts': 1, 'timeIncrement': 0.0810914611816406, 'increment': 14, 
    'stepTime': 0.446848602294922, 'step': 1, 'jobName': 'Job-6', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.446848602294922, 
    'attempts': ' 1U', 'timeIncrement': 0.121637191772461, 'increment': 15, 
    'stepTime': 0.446848602294922, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.477257900238037, 
    'attempts': 2, 'timeIncrement': 0.0304092979431152, 'increment': 15, 
    'stepTime': 0.477257900238037, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.477257900238037, 
    'attempts': ' 1U', 'timeIncrement': 0.0456139469146729, 'increment': 16, 
    'stepTime': 0.477257900238037, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.Model(name='MODEL 2', objectToCopy=mdb.models['Model-1'])
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.488661386966705, 
    'attempts': 2, 'timeIncrement': 0.0114034867286682, 'increment': 16, 
    'stepTime': 0.488661386966705, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.505766617059708, 
    'attempts': 1, 'timeIncrement': 0.0171052300930023, 'increment': 17, 
    'stepTime': 0.505766617059708, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.531424462199211, 
    'attempts': 1, 'timeIncrement': 0.0256578451395035, 'increment': 18, 
    'stepTime': 0.531424462199211, 'step': 1, 'jobName': 'Job-6', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.569911229908466, 
    'attempts': 1, 'timeIncrement': 0.0384867677092552, 'increment': 19, 
    'stepTime': 0.569911229908466, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.627641381472349, 
    'attempts': 1, 'timeIncrement': 0.0577301515638828, 'increment': 20, 
    'stepTime': 0.627641381472349, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.models['MODEL 2'].loads['Load-1'].setValues(magnitude=275280.0)
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.627641381472349, 
    'attempts': ' 1U', 'timeIncrement': 0.0865952273458243, 'increment': 21, 
    'stepTime': 0.627641381472349, 'step': 1, 'jobName': 'Job-6', 'severe': 4, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.649290188308805, 
    'attempts': 2, 'timeIncrement': 0.0216488068364561, 'increment': 21, 
    'stepTime': 0.649290188308805, 'step': 1, 'jobName': 'Job-6', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.681763398563489, 
    'attempts': 1, 'timeIncrement': 0.0324732102546841, 'increment': 22, 
    'stepTime': 0.681763398563489, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.730473213945516, 
    'attempts': 1, 'timeIncrement': 0.0487098153820262, 'increment': 23, 
    'stepTime': 0.730473213945516, 'step': 1, 'jobName': 'Job-6', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.730473213945516, 
    'attempts': ' 1U', 'timeIncrement': 0.0730647230730392, 'increment': 24, 
    'stepTime': 0.730473213945516, 'step': 1, 'jobName': 'Job-6', 'severe': 2, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.748739394713775, 
    'attempts': 2, 'timeIncrement': 0.0182661807682598, 'increment': 24, 
    'stepTime': 0.748739394713775, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='MODEL 2', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-7', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.748739394713775, 
    'attempts': ' 1U', 'timeIncrement': 0.0273992711523897, 'increment': 25, 
    'stepTime': 0.748739394713775, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 25, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.755589212501873, 
    'attempts': 2, 'timeIncrement': 0.00684981778809743, 'increment': 25, 
    'stepTime': 0.755589212501873, 'step': 1, 'jobName': 'Job-6', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 26, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.765863939184019, 
    'attempts': 1, 'timeIncrement': 0.0102747266821461, 'increment': 26, 
    'stepTime': 0.765863939184019, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 27, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.781276029207238, 
    'attempts': 1, 'timeIncrement': 0.0154120900232192, 'increment': 27, 
    'stepTime': 0.781276029207238, 'step': 1, 'jobName': 'Job-6', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 28, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.804394164242067, 
    'attempts': 1, 'timeIncrement': 0.0231181350348288, 'increment': 28, 
    'stepTime': 0.804394164242067, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 29, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.83907136679431, 
    'attempts': 1, 'timeIncrement': 0.0346772025522432, 'increment': 29, 
    'stepTime': 0.83907136679431, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 30, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.891087170622675, 
    'attempts': 1, 'timeIncrement': 0.0520158038283648, 'increment': 30, 
    'stepTime': 0.891087170622675, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.891087170622675, 
    'attempts': ' 1U', 'timeIncrement': 0.0780237057425472, 'increment': 31, 
    'stepTime': 0.891087170622675, 'step': 1, 'jobName': 'Job-6', 'severe': 3, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 31, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.910593097058312, 
    'attempts': 2, 'timeIncrement': 0.0195059264356368, 'increment': 31, 
    'stepTime': 0.910593097058312, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 32, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.939851986711767, 
    'attempts': 1, 'timeIncrement': 0.0292588896534552, 'increment': 32, 
    'stepTime': 0.939851986711767, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.939851986711767, 
    'attempts': ' 1U', 'timeIncrement': 0.0438883344801828, 'increment': 33, 
    'stepTime': 0.939851986711767, 'step': 1, 'jobName': 'Job-6', 'severe': 4, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.939851986711767, 
    'attempts': ' 2U', 'timeIncrement': 0.0109720836200457, 'increment': 33, 
    'stepTime': 0.939851986711767, 'step': 1, 'jobName': 'Job-6', 'severe': 5, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 33, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.942595007616779, 
    'attempts': 3, 'timeIncrement': 0.00274302090501143, 'increment': 33, 
    'stepTime': 0.942595007616779, 'step': 1, 'jobName': 'Job-6', 'severe': 2, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 34, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.946709538974296, 
    'attempts': 1, 'timeIncrement': 0.00411453135751714, 'increment': 34, 
    'stepTime': 0.946709538974296, 'step': 1, 'jobName': 'Job-6', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.Model(name='MODEL 3', objectToCopy=mdb.models['Model-1'])
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 35, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.952881336010571, 
    'attempts': 1, 'timeIncrement': 0.00617179703627571, 'increment': 35, 
    'stepTime': 0.952881336010571, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 36, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.962139031564985, 
    'attempts': 1, 'timeIncrement': 0.00925769555441357, 'increment': 36, 
    'stepTime': 0.962139031564985, 'step': 1, 'jobName': 'Job-6', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.models['MODEL 3'].loads['Load-1'].setValues(magnitude=400000.0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='MODEL 3', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-8', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.962139031564985, 
    'attempts': ' 1U', 'timeIncrement': 0.0138865433316203, 'increment': 37, 
    'stepTime': 0.962139031564985, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 37, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.96561066739789, 
    'attempts': 2, 'timeIncrement': 0.00347163583290509, 'increment': 37, 
    'stepTime': 0.96561066739789, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.Model(name='MODEL 4', objectToCopy=mdb.models['Model-1'])
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 38, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.970818121147248, 
    'attempts': 1, 'timeIncrement': 0.00520745374935763, 'increment': 38, 
    'stepTime': 0.970818121147248, 'step': 1, 'jobName': 'Job-6', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.models['MODEL 4'].loads['Load-1'].setValues(magnitude=638200.0)
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 39, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.978629301771284, 
    'attempts': 1, 'timeIncrement': 0.00781118062403645, 'increment': 39, 
    'stepTime': 0.978629301771284, 'step': 1, 'jobName': 'Job-6', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='MODEL 4', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-9', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.978629301771284, 
    'attempts': ' 1U', 'timeIncrement': 0.0117167709360547, 'increment': 40, 
    'stepTime': 0.978629301771284, 'step': 1, 'jobName': 'Job-6', 'severe': 4, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 40, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.981558494505298, 
    'attempts': 2, 'timeIncrement': 0.00292919273401367, 'increment': 40, 
    'stepTime': 0.981558494505298, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 41, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.985952283606318, 
    'attempts': 1, 'timeIncrement': 0.0043937891010205, 'increment': 41, 
    'stepTime': 0.985952283606318, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.985952283606318, 
    'attempts': ' 1U', 'timeIncrement': 0.00659068365153075, 'increment': 42, 
    'stepTime': 0.985952283606318, 'step': 1, 'jobName': 'Job-6', 'severe': 2, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 42, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.987599954519201, 
    'attempts': 2, 'timeIncrement': 0.00164767091288269, 'increment': 42, 
    'stepTime': 0.987599954519201, 'step': 1, 'jobName': 'Job-6', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 43, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.990071460888525, 
    'attempts': 1, 'timeIncrement': 0.00247150636932403, 'increment': 43, 
    'stepTime': 0.990071460888525, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 44, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.993778720442511, 
    'attempts': 1, 'timeIncrement': 0.00370725955398605, 'increment': 44, 
    'stepTime': 0.993778720442511, 'step': 1, 'jobName': 'Job-6', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
# Save by MAJID on 2024_11_17-15.13.44; build 2018 2017_11_07-22.51.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 45, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.99933960977349, 
    'attempts': 1, 'timeIncrement': 0.00556088933097907, 'increment': 45, 
    'stepTime': 0.99933960977349, 'step': 1, 'jobName': 'Job-6', 'severe': 7, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.99933960977349, 
    'attempts': ' 1U', 'timeIncrement': 0.000660390226509877, 'increment': 46, 
    'stepTime': 0.99933960977349, 'step': 1, 'jobName': 'Job-6', 'severe': 0, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 8})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.99933960977349, 
    'attempts': ' 2U', 'timeIncrement': 0.000165097556627469, 'increment': 46, 
    'stepTime': 0.99933960977349, 'step': 1, 'jobName': 'Job-6', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 46, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.999380884162647, 
    'attempts': 3, 'timeIncrement': 4.12743891568673e-05, 'increment': 46, 
    'stepTime': 0.999380884162647, 'step': 1, 'jobName': 'Job-6', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.999380884162647, 
    'attempts': ' 1U', 'timeIncrement': 6.1911583735301e-05, 'increment': 47, 
    'stepTime': 0.999380884162647, 'step': 1, 'jobName': 'Job-6', 'severe': 2, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 7})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 47, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.999396362058581, 
    'attempts': 2, 'timeIncrement': 1.54778959338252e-05, 'increment': 47, 
    'stepTime': 0.999396362058581, 'step': 1, 'jobName': 'Job-6', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 48, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.999419578902482, 
    'attempts': 1, 'timeIncrement': 2.32168439007379e-05, 'increment': 48, 
    'stepTime': 0.999419578902482, 'step': 1, 'jobName': 'Job-6', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.999419578902482, 
    'attempts': ' 1U', 'timeIncrement': 3.48252658511068e-05, 'increment': 49, 
    'stepTime': 0.999419578902482, 'step': 1, 'jobName': 'Job-6', 'severe': 4, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-6']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE PLASTICITY/CREEP/CONNECTOR FRICTION ALGORITHM DID NOT CONVERGE AT 309 POINTS', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Time increment required is less than the minimum specified', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STATUS, {'totalTime': 0.999419578902482, 
    'attempts': ' 2U', 'timeIncrement': 1e-05, 'increment': 49, 
    'stepTime': 0.999419578902482, 'step': 1, 'jobName': 'Job-6', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 49, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-6'})
# Save by MAJID on 2024_11_17-15.17.44; build 2018 2017_11_07-22.51.41 127140
# Save by MAJID on 2024_11_17-15.18.26; build 2018 2017_11_07-22.51.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-7'].submit(consistencyChecking=OFF)
# Save by MAJID on 2024_11_17-15.19.38; build 2018 2017_11_07-22.51.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['MODEL 2'].materials['Material-2'].elastic.setValues(table=((
    15000000000.0, 0.18), ))
mdb.models['MODEL 2'].steps['Step-1'].setValues(nlgeom=ON)
mdb.models['Model-1'].materials['Material-2'].elastic.setValues(table=((
    15000000000.0, 0.18), ))
mdb.models['Model-1'].steps['Step-1'].setValues(nlgeom=ON)
mdb.jobs['Job-6'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-6']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-6.odb', 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 8672, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-6', 'memory': 398.0})
mdb.jobs['Job-6']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(MINIMUM_MEMORY, {'minimum_memory': 78.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-6'})
mdb.jobs['Job-6']._Message(JOB_COMPLETED, {'time': 'Mon Nov 18 19:33:00 2024', 
    'jobName': 'Job-6'})
mdb.jobs['Job-6'].submit(consistencyChecking=OFF)
del mdb.jobs['Job-6']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-10', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-10'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-10']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-10.odb', 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 8152, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-10', 'memory': 398.0})
mdb.jobs['Job-10']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(MINIMUM_MEMORY, {'minimum_memory': 78.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(JOB_COMPLETED, {'time': 'Mon Nov 18 19:37:54 2024', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10'].submit(consistencyChecking=OFF)
mdb.jobs['Job-10']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-10.odb', 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 12616, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-10', 'memory': 329.0})
mdb.jobs['Job-10']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(MINIMUM_MEMORY, {'minimum_memory': 45.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Job-10', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-10']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Job-10', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-10']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Job-10', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-10']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Job-10', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-10']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-10'})
del mdb.jobs['Job-10']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-10', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-10'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-10']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-10.odb', 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 9576, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-10', 'memory': 398.0})
mdb.jobs['Job-10']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(MINIMUM_MEMORY, {'minimum_memory': 78.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(JOB_COMPLETED, {'time': 'Mon Nov 18 19:49:12 2024', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10'].submit(consistencyChecking=OFF)
mdb.jobs['Job-10']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-10.odb', 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 12352, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-10', 'memory': 329.0})
mdb.jobs['Job-10']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(MINIMUM_MEMORY, {'minimum_memory': 45.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Job-10', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-10']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Job-10', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-10']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Job-10', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-10']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-10'})
mdb.jobs['Job-10']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-10'})
mdb.models['MODEL 3'].materials['Material-2'].elastic.setValues(table=((
    15000000000.0, 0.18), ))
mdb.models['MODEL 3'].steps['Step-1'].setValues(nlgeom=ON)
mdb.jobs['Job-8'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-8']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-8.odb', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 9716, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-8', 'memory': 398.0})
mdb.jobs['Job-8']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(MINIMUM_MEMORY, {'minimum_memory': 78.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(JOB_COMPLETED, {'time': 'Mon Nov 18 19:53:33 2024', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8'].submit(consistencyChecking=OFF)
mdb.jobs['Job-8']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-8.odb', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 8152, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-8', 'memory': 329.0})
mdb.jobs['Job-8']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(MINIMUM_MEMORY, {'minimum_memory': 45.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Job-8', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Job-8', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Job-8', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Job-8', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Job-8', 'severe': 2, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Job-8', 'severe': 3, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Job-8', 'severe': 2, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': ' 1U', 
    'timeIncrement': 0.11390625, 'increment': 8, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Job-8', 'severe': 4, 'iterations': 9, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': ' 2U', 
    'timeIncrement': 0.0284765625, 'increment': 8, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Job-8', 'severe': 1, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.224931640625, 'attempts': 3, 
    'timeIncrement': 0.007119140625, 'increment': 8, 
    'stepTime': 0.224931640625, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.2356103515625, 
    'attempts': 1, 'timeIncrement': 0.0106787109375, 'increment': 9, 
    'stepTime': 0.2356103515625, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.25162841796875, 
    'attempts': 1, 'timeIncrement': 0.01601806640625, 'increment': 10, 
    'stepTime': 0.25162841796875, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.275655517578125, 
    'attempts': 1, 'timeIncrement': 0.024027099609375, 'increment': 11, 
    'stepTime': 0.275655517578125, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.311696166992187, 
    'attempts': 1, 'timeIncrement': 0.0360406494140625, 'increment': 12, 
    'stepTime': 0.311696166992187, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.311696166992187, 
    'attempts': ' 1U', 'timeIncrement': 0.0540609741210938, 'increment': 13, 
    'stepTime': 0.311696166992187, 'step': 1, 'jobName': 'Job-8', 'severe': 5, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.325211410522461, 
    'attempts': 2, 'timeIncrement': 0.0135152435302734, 'increment': 13, 
    'stepTime': 0.325211410522461, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.345484275817871, 
    'attempts': 1, 'timeIncrement': 0.0202728652954102, 'increment': 14, 
    'stepTime': 0.345484275817871, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.375893573760986, 
    'attempts': 1, 'timeIncrement': 0.0304092979431152, 'increment': 15, 
    'stepTime': 0.375893573760986, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.375893573760986, 
    'attempts': ' 1U', 'timeIncrement': 0.0456139469146729, 'increment': 16, 
    'stepTime': 0.375893573760986, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.375893573760986, 
    'attempts': ' 2U', 'timeIncrement': 0.0114034867286682, 'increment': 16, 
    'stepTime': 0.375893573760986, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.378744445443153, 
    'attempts': 3, 'timeIncrement': 0.00285087168216705, 'increment': 16, 
    'stepTime': 0.378744445443153, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.383020752966404, 
    'attempts': 1, 'timeIncrement': 0.00427630752325058, 'increment': 17, 
    'stepTime': 0.383020752966404, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.38943521425128, 
    'attempts': 1, 'timeIncrement': 0.00641446128487587, 'increment': 18, 
    'stepTime': 0.38943521425128, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.399056906178594, 
    'attempts': 1, 'timeIncrement': 0.00962169192731381, 'increment': 19, 
    'stepTime': 0.399056906178594, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.413489444069564, 
    'attempts': 1, 'timeIncrement': 0.0144325378909707, 'increment': 20, 
    'stepTime': 0.413489444069564, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.435138250906021, 
    'attempts': 1, 'timeIncrement': 0.0216488068364561, 'increment': 21, 
    'stepTime': 0.435138250906021, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.435138250906021, 
    'attempts': ' 1U', 'timeIncrement': 0.0324732102546841, 'increment': 22, 
    'stepTime': 0.435138250906021, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.443256553469692, 
    'attempts': 2, 'timeIncrement': 0.00811830256367103, 'increment': 22, 
    'stepTime': 0.443256553469692, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.455434007315198, 
    'attempts': 1, 'timeIncrement': 0.0121774538455065, 'increment': 23, 
    'stepTime': 0.455434007315198, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.473700188083458, 
    'attempts': 1, 'timeIncrement': 0.0182661807682598, 'increment': 24, 
    'stepTime': 0.473700188083458, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 25, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.501099459235848, 
    'attempts': 1, 'timeIncrement': 0.0273992711523897, 'increment': 25, 
    'stepTime': 0.501099459235848, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.501099459235848, 
    'attempts': ' 1U', 'timeIncrement': 0.0410989067285846, 'increment': 26, 
    'stepTime': 0.501099459235848, 'step': 1, 'jobName': 'Job-8', 'severe': 10, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 26, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.511374185917994, 
    'attempts': 2, 'timeIncrement': 0.0102747266821461, 'increment': 26, 
    'stepTime': 0.511374185917994, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.511374185917994, 
    'attempts': ' 1U', 'timeIncrement': 0.0154120900232192, 'increment': 27, 
    'stepTime': 0.511374185917994, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 27, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.515227208423799, 
    'attempts': 2, 'timeIncrement': 0.0038530225058048, 'increment': 27, 
    'stepTime': 0.515227208423799, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 28, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.521006742182506, 
    'attempts': 1, 'timeIncrement': 0.0057795337587072, 'increment': 28, 
    'stepTime': 0.521006742182506, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.521006742182506, 
    'attempts': ' 1U', 'timeIncrement': 0.00866930063806081, 'increment': 29, 
    'stepTime': 0.521006742182506, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 29, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.523174067342021, 
    'attempts': 2, 'timeIncrement': 0.0021673251595152, 'increment': 29, 
    'stepTime': 0.523174067342021, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 30, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.526425055081294, 
    'attempts': 1, 'timeIncrement': 0.0032509877392728, 'increment': 30, 
    'stepTime': 0.526425055081294, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.526425055081294, 
    'attempts': ' 1U', 'timeIncrement': 0.0048764816089092, 'increment': 31, 
    'stepTime': 0.526425055081294, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 6})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 31, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.527644175483521, 
    'attempts': 2, 'timeIncrement': 0.0012191204022273, 'increment': 31, 
    'stepTime': 0.527644175483521, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 32, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.529472856086862, 
    'attempts': 1, 'timeIncrement': 0.00182868060334095, 'increment': 32, 
    'stepTime': 0.529472856086862, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.529472856086862, 
    'attempts': ' 1U', 'timeIncrement': 0.00274302090501143, 'increment': 33, 
    'stepTime': 0.529472856086862, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 33, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.530158611313115, 
    'attempts': 2, 'timeIncrement': 0.000685755226252857, 'increment': 33, 
    'stepTime': 0.530158611313115, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 34, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.531187244152494, 
    'attempts': 1, 'timeIncrement': 0.00102863283937929, 'increment': 34, 
    'stepTime': 0.531187244152494, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 35, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.532730193411563, 
    'attempts': 1, 'timeIncrement': 0.00154294925906893, 'increment': 35, 
    'stepTime': 0.532730193411563, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.532730193411563, 
    'attempts': ' 1U', 'timeIncrement': 0.00231442388860339, 'increment': 36, 
    'stepTime': 0.532730193411563, 'step': 1, 'jobName': 'Job-8', 'severe': 4, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 36, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.533308799383714, 
    'attempts': 2, 'timeIncrement': 0.000578605972150848, 'increment': 36, 
    'stepTime': 0.533308799383714, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.533308799383714, 
    'attempts': ' 1U', 'timeIncrement': 0.000867908958226272, 'increment': 37, 
    'stepTime': 0.533308799383714, 'step': 1, 'jobName': 'Job-8', 'severe': 5, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 37, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.53352577662327, 
    'attempts': 2, 'timeIncrement': 0.000216977239556568, 'increment': 37, 
    'stepTime': 0.53352577662327, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 38, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.533851242482605, 
    'attempts': 1, 'timeIncrement': 0.000325465859334852, 'increment': 38, 
    'stepTime': 0.533851242482605, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.533851242482605, 
    'attempts': ' 1U', 'timeIncrement': 0.000488198789002278, 'increment': 39, 
    'stepTime': 0.533851242482605, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 39, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.533973292179856, 
    'attempts': 2, 'timeIncrement': 0.000122049697250569, 'increment': 39, 
    'stepTime': 0.533973292179856, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 40, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.534156366725732, 
    'attempts': 1, 'timeIncrement': 0.000183074545875854, 'increment': 40, 
    'stepTime': 0.534156366725732, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.534156366725732, 
    'attempts': ' 1U', 'timeIncrement': 0.000274611818813781, 'increment': 41, 
    'stepTime': 0.534156366725732, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.534156366725732, 
    'attempts': ' 2U', 'timeIncrement': 6.86529547034453e-05, 'increment': 41, 
    'stepTime': 0.534156366725732, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 41, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.534173529964408, 
    'attempts': 3, 'timeIncrement': 1.71632386758613e-05, 'increment': 41, 
    'stepTime': 0.534173529964408, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 42, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.534199274822421, 
    'attempts': 1, 'timeIncrement': 2.5744858013792e-05, 'increment': 42, 
    'stepTime': 0.534199274822421, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 8})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 43, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.534225019680435, 
    'attempts': 1, 'timeIncrement': 2.5744858013792e-05, 'increment': 43, 
    'stepTime': 0.534225019680435, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 6})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.534225019680435, 
    'attempts': ' 1U', 'timeIncrement': 2.5744858013792e-05, 'increment': 44, 
    'stepTime': 0.534225019680435, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 7})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 44, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.534235019680435, 
    'attempts': 2, 'timeIncrement': 1e-05, 'increment': 44, 
    'stepTime': 0.534235019680435, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 45, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.534245019680435, 
    'attempts': 1, 'timeIncrement': 1e-05, 'increment': 45, 
    'stepTime': 0.534245019680435, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 46, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.534260019680435, 
    'attempts': 1, 'timeIncrement': 1.5e-05, 'increment': 46, 
    'stepTime': 0.534260019680435, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 7})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.534260019680435, 
    'attempts': ' 1U', 'timeIncrement': 1.5e-05, 'increment': 47, 
    'stepTime': 0.534260019680435, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 47, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.534270019680435, 
    'attempts': 2, 'timeIncrement': 1e-05, 'increment': 47, 
    'stepTime': 0.534270019680435, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 48, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.534280019680435, 
    'attempts': 1, 'timeIncrement': 1e-05, 'increment': 48, 
    'stepTime': 0.534280019680435, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Time increment required is less than the minimum specified', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.534280019680435, 
    'attempts': ' 1U', 'timeIncrement': 1e-05, 'increment': 49, 
    'stepTime': 0.534280019680435, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 7})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 49, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-8']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-8.odb', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 10076, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-8', 'memory': 398.0})
mdb.jobs['Job-8']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(MINIMUM_MEMORY, {'minimum_memory': 78.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(JOB_COMPLETED, {'time': 'Mon Nov 18 20:57:34 2024', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8'].submit(consistencyChecking=OFF)
mdb.jobs['Job-8']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-8.odb', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 12604, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-8', 'memory': 329.0})
mdb.jobs['Job-8']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(MINIMUM_MEMORY, {'minimum_memory': 45.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Job-8', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Job-8', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Job-8', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Job-8', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Job-8', 'severe': 2, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Job-8', 'severe': 3, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Job-8', 'severe': 2, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': ' 1U', 
    'timeIncrement': 0.11390625, 'increment': 8, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Job-8', 'severe': 4, 'iterations': 9, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': ' 2U', 
    'timeIncrement': 0.0284765625, 'increment': 8, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Job-8', 'severe': 1, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.224931640625, 'attempts': 3, 
    'timeIncrement': 0.007119140625, 'increment': 8, 
    'stepTime': 0.224931640625, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.2356103515625, 
    'attempts': 1, 'timeIncrement': 0.0106787109375, 'increment': 9, 
    'stepTime': 0.2356103515625, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.25162841796875, 
    'attempts': 1, 'timeIncrement': 0.01601806640625, 'increment': 10, 
    'stepTime': 0.25162841796875, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.275655517578125, 
    'attempts': 1, 'timeIncrement': 0.024027099609375, 'increment': 11, 
    'stepTime': 0.275655517578125, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.311696166992187, 
    'attempts': 1, 'timeIncrement': 0.0360406494140625, 'increment': 12, 
    'stepTime': 0.311696166992187, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.311696166992187, 
    'attempts': ' 1U', 'timeIncrement': 0.0540609741210938, 'increment': 13, 
    'stepTime': 0.311696166992187, 'step': 1, 'jobName': 'Job-8', 'severe': 5, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.325211410522461, 
    'attempts': 2, 'timeIncrement': 0.0135152435302734, 'increment': 13, 
    'stepTime': 0.325211410522461, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.345484275817871, 
    'attempts': 1, 'timeIncrement': 0.0202728652954102, 'increment': 14, 
    'stepTime': 0.345484275817871, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.375893573760986, 
    'attempts': 1, 'timeIncrement': 0.0304092979431152, 'increment': 15, 
    'stepTime': 0.375893573760986, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.375893573760986, 
    'attempts': ' 1U', 'timeIncrement': 0.0456139469146729, 'increment': 16, 
    'stepTime': 0.375893573760986, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.375893573760986, 
    'attempts': ' 2U', 'timeIncrement': 0.0114034867286682, 'increment': 16, 
    'stepTime': 0.375893573760986, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.378744445443153, 
    'attempts': 3, 'timeIncrement': 0.00285087168216705, 'increment': 16, 
    'stepTime': 0.378744445443153, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.383020752966404, 
    'attempts': 1, 'timeIncrement': 0.00427630752325058, 'increment': 17, 
    'stepTime': 0.383020752966404, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.38943521425128, 
    'attempts': 1, 'timeIncrement': 0.00641446128487587, 'increment': 18, 
    'stepTime': 0.38943521425128, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.399056906178594, 
    'attempts': 1, 'timeIncrement': 0.00962169192731381, 'increment': 19, 
    'stepTime': 0.399056906178594, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.413489444069564, 
    'attempts': 1, 'timeIncrement': 0.0144325378909707, 'increment': 20, 
    'stepTime': 0.413489444069564, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.435138250906021, 
    'attempts': 1, 'timeIncrement': 0.0216488068364561, 'increment': 21, 
    'stepTime': 0.435138250906021, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.435138250906021, 
    'attempts': ' 1U', 'timeIncrement': 0.0324732102546841, 'increment': 22, 
    'stepTime': 0.435138250906021, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.443256553469692, 
    'attempts': 2, 'timeIncrement': 0.00811830256367103, 'increment': 22, 
    'stepTime': 0.443256553469692, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.455434007315198, 
    'attempts': 1, 'timeIncrement': 0.0121774538455065, 'increment': 23, 
    'stepTime': 0.455434007315198, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.473700188083458, 
    'attempts': 1, 'timeIncrement': 0.0182661807682598, 'increment': 24, 
    'stepTime': 0.473700188083458, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 25, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.501099459235848, 
    'attempts': 1, 'timeIncrement': 0.0273992711523897, 'increment': 25, 
    'stepTime': 0.501099459235848, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-8'})
mdb.models['MODEL 3'].materials['Material-2'].elastic.setValues(table=((
    14000000000.0, 0.18), ))
mdb.models['MODEL 4'].materials['Material-2'].elastic.setValues(table=((
    14000000000.0, 0.18), ))
mdb.jobs['Job-9'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-9']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-9'})
mdb.models['MODEL 4'].steps['Step-1'].setValues(nlgeom=ON)
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-9.odb', 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 13892, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-9', 'memory': 398.0})
mdb.jobs['Job-9']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(MINIMUM_MEMORY, {'minimum_memory': 78.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(JOB_COMPLETED, {'time': 'Mon Nov 18 21:37:48 2024', 
    'jobName': 'Job-9'})
del mdb.jobs['Job-9']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='MODEL 4', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-9', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-9'].submit(consistencyChecking=OFF, datacheckJob=True)
del mdb.jobs['Job-9']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='MODEL 4', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-9', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-9'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-9']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-9.odb', 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-9.odb', 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 8936, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 8936, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-9', 'memory': 398.0})
mdb.jobs['Job-9']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-9', 'memory': 398.0})
mdb.jobs['Job-9']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(MINIMUM_MEMORY, {'minimum_memory': 78.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(MINIMUM_MEMORY, {'minimum_memory': 78.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(JOB_COMPLETED, {'time': 'Mon Nov 18 21:40:58 2024', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(JOB_COMPLETED, {'time': 'Mon Nov 18 21:40:58 2024', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9'].submit(consistencyChecking=OFF)
mdb.jobs['Job-9']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-9.odb', 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 388, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-9', 'memory': 329.0})
mdb.jobs['Job-9']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(MINIMUM_MEMORY, {'minimum_memory': 45.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Job-9', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Job-9', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Job-9', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Job-9', 'severe': 3, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.0575, 'attempts': ' 1U', 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Job-9', 'severe': 3, 'iterations': 8, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.0659375, 'attempts': 2, 
    'timeIncrement': 0.0084375, 'increment': 5, 'stepTime': 0.0659375, 
    'step': 1, 'jobName': 'Job-9', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.07859375, 'attempts': 1, 
    'timeIncrement': 0.01265625, 'increment': 6, 'stepTime': 0.07859375, 
    'step': 1, 'jobName': 'Job-9', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.07859375, 'attempts': ' 1U', 
    'timeIncrement': 0.018984375, 'increment': 7, 'stepTime': 0.07859375, 
    'step': 1, 'jobName': 'Job-9', 'severe': 2, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.08333984375, 'attempts': 2, 
    'timeIncrement': 0.00474609375, 'increment': 7, 'stepTime': 0.08333984375, 
    'step': 1, 'jobName': 'Job-9', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.090458984375, 'attempts': 1, 
    'timeIncrement': 0.007119140625, 'increment': 8, 
    'stepTime': 0.090458984375, 'step': 1, 'jobName': 'Job-9', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.1011376953125, 
    'attempts': 1, 'timeIncrement': 0.0106787109375, 'increment': 9, 
    'stepTime': 0.1011376953125, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.11715576171875, 
    'attempts': 1, 'timeIncrement': 0.01601806640625, 'increment': 10, 
    'stepTime': 0.11715576171875, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.141182861328125, 
    'attempts': 1, 'timeIncrement': 0.024027099609375, 'increment': 11, 
    'stepTime': 0.141182861328125, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.177223510742188, 
    'attempts': 1, 'timeIncrement': 0.0360406494140625, 'increment': 12, 
    'stepTime': 0.177223510742188, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.177223510742188, 
    'attempts': ' 1U', 'timeIncrement': 0.0540609741210938, 'increment': 13, 
    'stepTime': 0.177223510742188, 'step': 1, 'jobName': 'Job-9', 'severe': 8, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.190738754272461, 
    'attempts': 2, 'timeIncrement': 0.0135152435302734, 'increment': 13, 
    'stepTime': 0.190738754272461, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.211011619567871, 
    'attempts': 1, 'timeIncrement': 0.0202728652954102, 'increment': 14, 
    'stepTime': 0.211011619567871, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.241420917510986, 
    'attempts': 1, 'timeIncrement': 0.0304092979431152, 'increment': 15, 
    'stepTime': 0.241420917510986, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.241420917510986, 
    'attempts': ' 1U', 'timeIncrement': 0.0456139469146729, 'increment': 16, 
    'stepTime': 0.241420917510986, 'step': 1, 'jobName': 'Job-9', 'severe': 2, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.252824404239655, 
    'attempts': 2, 'timeIncrement': 0.0114034867286682, 'increment': 16, 
    'stepTime': 0.252824404239655, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.269929634332657, 
    'attempts': 1, 'timeIncrement': 0.0171052300930023, 'increment': 17, 
    'stepTime': 0.269929634332657, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.269929634332657, 
    'attempts': ' 1U', 'timeIncrement': 0.0256578451395035, 'increment': 18, 
    'stepTime': 0.269929634332657, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.269929634332657, 
    'attempts': ' 2U', 'timeIncrement': 0.00641446128487587, 'increment': 18, 
    'stepTime': 0.269929634332657, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.269929634332657, 
    'attempts': ' 3U', 'timeIncrement': 0.00160361532121897, 'increment': 18, 
    'stepTime': 0.269929634332657, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.270330538162962, 
    'attempts': 4, 'timeIncrement': 0.000400903830304742, 'increment': 18, 
    'stepTime': 0.270330538162962, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.270931893908419, 
    'attempts': 1, 'timeIncrement': 0.000601355745457113, 'increment': 19, 
    'stepTime': 0.270931893908419, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.271833927526604, 
    'attempts': 1, 'timeIncrement': 0.000902033618185669, 'increment': 20, 
    'stepTime': 0.271833927526604, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.273186977953883, 
    'attempts': 1, 'timeIncrement': 0.0013530504272785, 'increment': 21, 
    'stepTime': 0.273186977953883, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.273186977953883, 
    'attempts': ' 1U', 'timeIncrement': 0.00202957564091776, 'increment': 22, 
    'stepTime': 0.273186977953883, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.273694371864112, 
    'attempts': 2, 'timeIncrement': 0.000507393910229439, 'increment': 22, 
    'stepTime': 0.273694371864112, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.274455462729456, 
    'attempts': 1, 'timeIncrement': 0.000761090865344159, 'increment': 23, 
    'stepTime': 0.274455462729456, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.275597099027473, 
    'attempts': 1, 'timeIncrement': 0.00114163629801624, 'increment': 24, 
    'stepTime': 0.275597099027473, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 25, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.277309553474497, 
    'attempts': 1, 'timeIncrement': 0.00171245444702436, 'increment': 25, 
    'stepTime': 0.277309553474497, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 26, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.279878235145034, 
    'attempts': 1, 'timeIncrement': 0.00256868167053653, 'increment': 26, 
    'stepTime': 0.279878235145034, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 27, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.283731257650838, 
    'attempts': 1, 'timeIncrement': 0.0038530225058048, 'increment': 27, 
    'stepTime': 0.283731257650838, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 28, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.289510791409546, 
    'attempts': 1, 'timeIncrement': 0.0057795337587072, 'increment': 28, 
    'stepTime': 0.289510791409546, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 29, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.298180092047606, 
    'attempts': 1, 'timeIncrement': 0.00866930063806081, 'increment': 29, 
    'stepTime': 0.298180092047606, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 30, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.311184043004698, 
    'attempts': 1, 'timeIncrement': 0.0130039509570912, 'increment': 30, 
    'stepTime': 0.311184043004698, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.311184043004698, 
    'attempts': ' 1U', 'timeIncrement': 0.0195059264356368, 'increment': 31, 
    'stepTime': 0.311184043004698, 'step': 1, 'jobName': 'Job-9', 'severe': 2, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.311184043004698, 
    'attempts': ' 2U', 'timeIncrement': 0.0048764816089092, 'increment': 31, 
    'stepTime': 0.311184043004698, 'step': 1, 'jobName': 'Job-9', 'severe': 5, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 31, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.312403163406925, 
    'attempts': 3, 'timeIncrement': 0.0012191204022273, 'increment': 31, 
    'stepTime': 0.312403163406925, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 32, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.314231844010266, 
    'attempts': 1, 'timeIncrement': 0.00182868060334095, 'increment': 32, 
    'stepTime': 0.314231844010266, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 33, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.316974864915277, 
    'attempts': 1, 'timeIncrement': 0.00274302090501143, 'increment': 33, 
    'stepTime': 0.316974864915277, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 34, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.321089396272795, 
    'attempts': 1, 'timeIncrement': 0.00411453135751714, 'increment': 34, 
    'stepTime': 0.321089396272795, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 35, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.32726119330907, 
    'attempts': 1, 'timeIncrement': 0.00617179703627571, 'increment': 35, 
    'stepTime': 0.32726119330907, 'step': 1, 'jobName': 'Job-9', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 36, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.336518888863484, 
    'attempts': 1, 'timeIncrement': 0.00925769555441357, 'increment': 36, 
    'stepTime': 0.336518888863484, 'step': 1, 'jobName': 'Job-9', 'severe': 9, 
    'iterations': 12, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 37, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.343462160529294, 
    'attempts': 1, 'timeIncrement': 0.00694327166581017, 'increment': 37, 
    'stepTime': 0.343462160529294, 'step': 1, 'jobName': 'Job-9', 'severe': 3, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 38, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.350405432195104, 
    'attempts': 1, 'timeIncrement': 0.00694327166581017, 'increment': 38, 
    'stepTime': 0.350405432195104, 'step': 1, 'jobName': 'Job-9', 'severe': 1, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.350405432195104, 
    'attempts': ' 1U', 'timeIncrement': 0.0104149074987153, 'increment': 39, 
    'stepTime': 0.350405432195104, 'step': 1, 'jobName': 'Job-9', 'severe': 5, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.350405432195104, 
    'attempts': ' 2U', 'timeIncrement': 0.00260372687467882, 'increment': 39, 
    'stepTime': 0.350405432195104, 'step': 1, 'jobName': 'Job-9', 'severe': 2, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.350405432195104, 
    'attempts': ' 3U', 'timeIncrement': 0.000650931718669704, 'increment': 39, 
    'stepTime': 0.350405432195104, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 10})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.350405432195104, 
    'attempts': ' 4U', 'timeIncrement': 0.000325465859334852, 'increment': 39, 
    'stepTime': 0.350405432195104, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 9})
mdb.jobs['Job-9']._Message(STATUS, {'totalTime': 0.350405432195104, 
    'attempts': ' 5U', 'timeIncrement': 8.1366464833713e-05, 'increment': 39, 
    'stepTime': 0.350405432195104, 'step': 1, 'jobName': 'Job-9', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-9']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Too many attempts made for this increment', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 39, 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-9'})
mdb.jobs['Job-9']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-9'})
# Save by Admin on 2024_11_18-22.33.40; build 2018 2017_11_07-22.51.41 127140
# Save by Admin on 2024_11_18-22.35.00; build 2018 2017_11_07-22.51.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.saveAs(pathName='C:/temp/GEOTECH-SHALLOW1.cae')
del mdb.jobs['Job-8']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='MODEL 3', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-8', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-8'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-8']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-8.odb', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 7948, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-8', 'memory': 398.0})
mdb.jobs['Job-8']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(MINIMUM_MEMORY, {'minimum_memory': 78.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(JOB_COMPLETED, {'time': 'Mon Nov 18 22:37:44 2024', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8'].submit(consistencyChecking=OFF)
mdb.jobs['Job-8']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '84 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes may have incorrect normal definitions. The nodes have been identified in node set WarnNodeIncorrectNormal.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-25-ASSEMBLY_M_SURF-25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '108 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-8.odb', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-M4VAJAV', 'handle': 6568, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-8', 'memory': 329.0})
mdb.jobs['Job-8']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 5085.0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(MINIMUM_MEMORY, {'minimum_memory': 45.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Job-8', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Job-8', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Job-8', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Job-8', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Job-8', 'severe': 2, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Job-8', 'severe': 3, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.141875, 'attempts': ' 1U', 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.141875, 
    'step': 1, 'jobName': 'Job-8', 'severe': 2, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.160859375, 'attempts': 2, 
    'timeIncrement': 0.018984375, 'increment': 7, 'stepTime': 0.160859375, 
    'step': 1, 'jobName': 'Job-8', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.1893359375, 'attempts': 1, 
    'timeIncrement': 0.0284765625, 'increment': 8, 'stepTime': 0.1893359375, 
    'step': 1, 'jobName': 'Job-8', 'severe': 1, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.1893359375, 
    'attempts': ' 1U', 'timeIncrement': 0.04271484375, 'increment': 9, 
    'stepTime': 0.1893359375, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.2000146484375, 
    'attempts': 2, 'timeIncrement': 0.0106787109375, 'increment': 9, 
    'stepTime': 0.2000146484375, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.21603271484375, 
    'attempts': 1, 'timeIncrement': 0.01601806640625, 'increment': 10, 
    'stepTime': 0.21603271484375, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.21603271484375, 
    'attempts': ' 1U', 'timeIncrement': 0.024027099609375, 'increment': 11, 
    'stepTime': 0.21603271484375, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.222039489746094, 
    'attempts': 2, 'timeIncrement': 0.00600677490234375, 'increment': 11, 
    'stepTime': 0.222039489746094, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.231049652099609, 
    'attempts': 1, 'timeIncrement': 0.00901016235351563, 'increment': 12, 
    'stepTime': 0.231049652099609, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.244564895629883, 
    'attempts': 1, 'timeIncrement': 0.0135152435302734, 'increment': 13, 
    'stepTime': 0.244564895629883, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.264837760925293, 
    'attempts': 1, 'timeIncrement': 0.0202728652954102, 'increment': 14, 
    'stepTime': 0.264837760925293, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.295247058868408, 
    'attempts': 1, 'timeIncrement': 0.0304092979431152, 'increment': 15, 
    'stepTime': 0.295247058868408, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.295247058868408, 
    'attempts': ' 1U', 'timeIncrement': 0.0456139469146729, 'increment': 16, 
    'stepTime': 0.295247058868408, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.306650545597076, 
    'attempts': 2, 'timeIncrement': 0.0114034867286682, 'increment': 16, 
    'stepTime': 0.306650545597076, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.323755775690079, 
    'attempts': 1, 'timeIncrement': 0.0171052300930023, 'increment': 17, 
    'stepTime': 0.323755775690079, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.349413620829582, 
    'attempts': 1, 'timeIncrement': 0.0256578451395035, 'increment': 18, 
    'stepTime': 0.349413620829582, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.387900388538837, 
    'attempts': 1, 'timeIncrement': 0.0384867677092552, 'increment': 19, 
    'stepTime': 0.387900388538837, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.387900388538837, 
    'attempts': ' 1U', 'timeIncrement': 0.0577301515638828, 'increment': 20, 
    'stepTime': 0.387900388538837, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.402332926429808, 
    'attempts': 2, 'timeIncrement': 0.0144325378909707, 'increment': 20, 
    'stepTime': 0.402332926429808, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.423981733266264, 
    'attempts': 1, 'timeIncrement': 0.0216488068364561, 'increment': 21, 
    'stepTime': 0.423981733266264, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.423981733266264, 
    'attempts': ' 1U', 'timeIncrement': 0.0324732102546841, 'increment': 22, 
    'stepTime': 0.423981733266264, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.432100035829935, 
    'attempts': 2, 'timeIncrement': 0.00811830256367103, 'increment': 22, 
    'stepTime': 0.432100035829935, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.444277489675442, 
    'attempts': 1, 'timeIncrement': 0.0121774538455065, 'increment': 23, 
    'stepTime': 0.444277489675442, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.462543670443702, 
    'attempts': 1, 'timeIncrement': 0.0182661807682598, 'increment': 24, 
    'stepTime': 0.462543670443702, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.462543670443702, 
    'attempts': ' 1U', 'timeIncrement': 0.0273992711523897, 'increment': 25, 
    'stepTime': 0.462543670443702, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 25, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.469393488231799, 
    'attempts': 2, 'timeIncrement': 0.00684981778809743, 'increment': 25, 
    'stepTime': 0.469393488231799, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.469393488231799, 
    'attempts': ' 1U', 'timeIncrement': 0.0102747266821461, 'increment': 26, 
    'stepTime': 0.469393488231799, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 26, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.471962169902336, 
    'attempts': 2, 'timeIncrement': 0.00256868167053653, 'increment': 26, 
    'stepTime': 0.471962169902336, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 27, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.47581519240814, 
    'attempts': 1, 'timeIncrement': 0.0038530225058048, 'increment': 27, 
    'stepTime': 0.47581519240814, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 28, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.481594726166848, 
    'attempts': 1, 'timeIncrement': 0.0057795337587072, 'increment': 28, 
    'stepTime': 0.481594726166848, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 29, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.490264026804908, 
    'attempts': 1, 'timeIncrement': 0.00866930063806081, 'increment': 29, 
    'stepTime': 0.490264026804908, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 30, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.503267977762, 'attempts': 1, 
    'timeIncrement': 0.0130039509570912, 'increment': 30, 
    'stepTime': 0.503267977762, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.503267977762, 
    'attempts': ' 1U', 'timeIncrement': 0.0195059264356368, 'increment': 31, 
    'stepTime': 0.503267977762, 'step': 1, 'jobName': 'Job-8', 'severe': 2, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 31, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.508144459370909, 
    'attempts': 2, 'timeIncrement': 0.0048764816089092, 'increment': 31, 
    'stepTime': 0.508144459370909, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.508144459370909, 
    'attempts': ' 1U', 'timeIncrement': 0.0073147224133638, 'increment': 32, 
    'stepTime': 0.508144459370909, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 32, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.50997313997425, 
    'attempts': 2, 'timeIncrement': 0.00182868060334095, 'increment': 32, 
    'stepTime': 0.50997313997425, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 33, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.512716160879261, 
    'attempts': 1, 'timeIncrement': 0.00274302090501143, 'increment': 33, 
    'stepTime': 0.512716160879261, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 34, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.516830692236778, 
    'attempts': 1, 'timeIncrement': 0.00411453135751714, 'increment': 34, 
    'stepTime': 0.516830692236778, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.516830692236778, 
    'attempts': ' 1U', 'timeIncrement': 0.00617179703627571, 'increment': 35, 
    'stepTime': 0.516830692236778, 'step': 1, 'jobName': 'Job-8', 'severe': 3, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 35, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.518373641495847, 
    'attempts': 2, 'timeIncrement': 0.00154294925906893, 'increment': 35, 
    'stepTime': 0.518373641495847, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 36, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.520688065384451, 
    'attempts': 1, 'timeIncrement': 0.00231442388860339, 'increment': 36, 
    'stepTime': 0.520688065384451, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 37, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.524159701217356, 
    'attempts': 1, 'timeIncrement': 0.00347163583290509, 'increment': 37, 
    'stepTime': 0.524159701217356, 'step': 1, 'jobName': 'Job-8', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 38, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(STATUS, {'totalTime': 0.529367154966713, 
    'attempts': 1, 'timeIncrement': 0.00520745374935763, 'increment': 38, 
    'stepTime': 0.529367154966713, 'step': 1, 'jobName': 'Job-8', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-8']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-8'})
# Save by Admin on 2024_11_18-23.48.52; build 2018 2017_11_07-22.51.41 127140
